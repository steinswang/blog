{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/3-hexo/source/css/mobile.styl","path":"css/mobile.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/alipay.jpg","path":"img/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/bg.jpg","path":"img/bg.jpg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/school-book.png","path":"img/school-book.png","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/brown-papersq.png","path":"img/brown-papersq.png","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/weixin.jpg","path":"img/weixin.jpg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/jquery.autocomplete.min.js","path":"js/jquery.autocomplete.min.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","path":"css/fonts/icomoon.eot","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","path":"css/fonts/icomoon.svg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","path":"css/fonts/icomoon.ttf","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","path":"css/fonts/icomoon.woff","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","path":"css/hl_theme/atom-light.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/selection.json","path":"css/fonts/selection.json","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","path":"css/hl_theme/atom-dark.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","path":"css/hl_theme/brown-paper.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","path":"css/hl_theme/darcula.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","path":"css/hl_theme/github-gist.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","path":"css/hl_theme/github.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","path":"css/hl_theme/gruvbox-dark.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","path":"css/hl_theme/gruvbox-light.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","path":"css/hl_theme/kimbie-dark.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","path":"css/hl_theme/kimbie-light.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","path":"css/hl_theme/railscasts.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","path":"css/hl_theme/rainbow.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","path":"css/hl_theme/school-book.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","path":"css/hl_theme/sublime.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","path":"css/hl_theme/sunburst.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","path":"css/hl_theme/zenbum.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/gitalk.js","path":"js/gitalk.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"ab2683dd96d131c6883a29c91eb7fa71dc2154ed","modified":1516626767000},{"_id":"source/CNAME","hash":"c56f07d65fc8c6c7d83fc8019100cf09216768e6","modified":1516012049000},{"_id":"themes/3-hexo/.gitignore","hash":"5e85fe97e87211619c1db29fd3f3b0dbf16be4a7","modified":1516012049000},{"_id":"themes/3-hexo/README.md","hash":"794c03ffd0399d55d11b9dce610f8419c7106078","modified":1516012049000},{"_id":"themes/3-hexo/_config.yml","hash":"912f20d22efacdd03f7f0dfc1c920a0fe0ec0ea2","modified":1516024758000},{"_id":"source/_posts/.DS_Store","hash":"99cb25fceba08eb7a310a19aa4ce9a465c4f2689","modified":1516626903000},{"_id":"themes/3-hexo/layout/index.ejs","hash":"4008433a69103beef3bc8960fe2586b75139cba9","modified":1516012049000},{"_id":"themes/3-hexo/layout/indexs.md","hash":"e98b27005c0fb0d7618ae3815654ac33f8c02313","modified":1516012049000},{"_id":"themes/3-hexo/layout/post.ejs","hash":"64e7370452840bff8e923e150e524cf86868acf9","modified":1516012049000},{"_id":"source/_posts/Android/.DS_Store","hash":"f6ec19c345c583ab538686873a47572068bf6cd1","modified":1516028442000},{"_id":"source/_posts/Android/为Nexus编译LineageOS.md","hash":"3eab24408908bc174a3c8c0ef942d3155d82cf91","modified":1516012049000},{"_id":"source/_posts/Android/多语言下，String子串可点击并实现跳转.md","hash":"f4e3796820e08a8b6c989ceba73c426cfd5d8dff","modified":1516623006000},{"_id":"source/_posts/Android/开机导入Sim卡联系人.md","hash":"c3edd67a95a82e872bb7948969053a3a3c36277d","modified":1516028288000},{"_id":"source/_posts/Android/联系人号码模糊查询.md","hash":"5ef8487d6dc813d42c261e7fb888515973e5aa53","modified":1516027260000},{"_id":"source/_posts/Android/跨进程通讯的4种方式.md","hash":"a30f0c281b8a4f4b7b196bae86ebda0a1fd1096a","modified":1516027757000},{"_id":"source/_posts/工具/Hexo-GitHub-Pages搭建属于自己的blog.md","hash":"e18b3d9f28cb958ced95d98d70ddbb23c62955ec","modified":1516025661000},{"_id":"source/_posts/英语/Food-politics-in-America.md","hash":"f50cf1e539f29794136feacdb59e493c89fd08b8","modified":1516627789000},{"_id":"themes/3-hexo/layout/_partial/article.ejs","hash":"7b965645d11e930c076f7cf4e269880dc884ca66","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/article_copyright.ejs","hash":"5701b04252f113cc78dfde69bd6393fff6b1cce2","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/comment.ejs","hash":"5507b4dfab2032345e012a0c5356f63b01395157","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/copyright.ejs","hash":"99ae7e411f8d24bed54a27be30bb71ef2041ff7b","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/dashang.ejs","hash":"a6714eed28ede8a50c186ef76798b410c2fb4f31","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/footer.ejs","hash":"d5377aad797fa25e39937c6af079411884c6365e","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/friends.ejs","hash":"7a31274da81c076021692ff7c80a1be3bbf6fa4c","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/full-toc.ejs","hash":"7e6c50b6c24de864e0d6a106e6a8e423e312454a","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/header.ejs","hash":"866bb0d3964f2938dc5b5a22c24b05d32870820c","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/mathjax.ejs","hash":"c2e5cef2377884cd79e5f686fe4f74b082744306","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/meta.ejs","hash":"ac5db0d1fc119bbaf2efbf4fda638fad7c402c1b","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/nav-left.ejs","hash":"5f5015bfc77c013f92395a4ac3464d28ab40a2a6","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/nav-right.ejs","hash":"55042bba47352551e16add7ecb679b4a59da2b9f","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/tag.ejs","hash":"da40cb48b6b1f24cbd7107f7c97b04f063e9c299","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/toc-ref.ejs","hash":"6406251dabda66ef686d4c15edbc3061b6d828b8","modified":1516012049000},{"_id":"themes/3-hexo/source/css/mobile.styl","hash":"83e5569a58663f9322dda64d263a80153790ad68","modified":1516012049000},{"_id":"themes/3-hexo/source/css/style.styl","hash":"430f3a4f6a3e01fdb08fcded2126ef55b4109bf8","modified":1516012049000},{"_id":"themes/3-hexo/source/img/alipay.jpg","hash":"f0d1fad4d14841cc3dd3b00c37e66ca9d2548020","modified":1516012049000},{"_id":"themes/3-hexo/source/img/bg.jpg","hash":"331f382a62f46ac8819c3b408b21af4f92118cf7","modified":1516012049000},{"_id":"themes/3-hexo/source/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1516012049000},{"_id":"themes/3-hexo/source/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1516012049000},{"_id":"themes/3-hexo/source/img/weixin.jpg","hash":"f0d1fad4d14841cc3dd3b00c37e66ca9d2548020","modified":1516012049000},{"_id":"themes/3-hexo/source/js/jquery.autocomplete.min.js","hash":"8ee8b07ce5b0d2415ae36c9339d2a5c5e9e1caf0","modified":1516012049000},{"_id":"themes/3-hexo/source/js/script.js","hash":"c3ce570b1b680fc7a3f066e876d397ed7c2d3aed","modified":1516012049000},{"_id":"themes/3-hexo/source/js/search.js","hash":"123d5488e492c6153fae24fffae54a6da927b92b","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/comments/click2show.ejs","hash":"359f73329b9821f3ca3554d306a04d6766110a5a","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/comments/disqus.ejs","hash":"cd0022ce7e6d6efb07a00e87477cdf791f7f6703","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/comments/gentie.ejs","hash":"1d6eacdadeb247e3b349ca7168f797beae8ff4c5","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/comments/gitalk.ejs","hash":"85c8ca4dce12afea05b03a9187a7d38ecc4d3a4d","modified":1516012049000},{"_id":"themes/3-hexo/layout/_partial/comments/gitment.ejs","hash":"f8f9b49c7c7a00d16bd41bb72b90cca3d320d73e","modified":1516012049000},{"_id":"themes/3-hexo/source/css/_partial/autocomplete.styl","hash":"f6847a2c6d35dbd6d06dc591bd34ed2019784048","modified":1516012049000},{"_id":"themes/3-hexo/source/css/_partial/comment.styl","hash":"cc0a862b31359a85d12579e49d2eca58d128275c","modified":1516012049000},{"_id":"themes/3-hexo/source/css/_partial/dashang.styl","hash":"f6447a2ac407228e1d53e3455db2919ac0e9f094","modified":1516012049000},{"_id":"themes/3-hexo/source/css/_partial/fade.styl","hash":"4f687cbc74caf8a0887f5e89250284a9bce8b5c1","modified":1516012049000},{"_id":"themes/3-hexo/source/css/_partial/font.styl","hash":"6c94d274b11553a982283b16770e0d54405a7bd5","modified":1516012049000},{"_id":"themes/3-hexo/source/css/_partial/full-toc.styl","hash":"0ba318911afbbbffbd2473b472aedf2d3900e978","modified":1516012049000},{"_id":"themes/3-hexo/source/css/_partial/nav-left.styl","hash":"e685c8a37c39646d57c9c822e008a88f47140d9c","modified":1516012049000},{"_id":"themes/3-hexo/source/css/_partial/nav-right.styl","hash":"b600536ee237936c9f09609d96bb0dbb4adfb59b","modified":1516012049000},{"_id":"themes/3-hexo/source/css/_partial/nprogress.styl","hash":"65efbddd23a264e7d1e85f4073228526770e833c","modified":1516012049000},{"_id":"themes/3-hexo/source/css/_partial/num-load.styl","hash":"4b996440bba8ec755aa70bc6d074d7dbba55ec0c","modified":1516012049000},{"_id":"themes/3-hexo/source/css/_partial/post.styl","hash":"06d0b7a12ccc71cb693f5d07720602fb514c24eb","modified":1516012049000},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1516012049000},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","hash":"37ac1ef28b03f46bf3ad2606c86f0e1ec3e4405f","modified":1516012049000},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1516012049000},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","hash":"69d184a682bcaeba2b180b437dc4431bc3be38aa","modified":1516012049000},{"_id":"themes/3-hexo/source/css/fonts/selection.json","hash":"57c7f100019d57b512aab509185cb0a6eb9aa4c8","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","hash":"f3eb4e5feda9cbd6242ccf44ca064e2979b5d719","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","hash":"03af387edcc1cf8c18d12e9c440fd51b6cf425b6","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","hash":"2bfc14f27ccca108b4b3755782de8366e8bd001e","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","hash":"5e05b19832c1099bd9d284bc3ed00dc8a3d7ee23","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","hash":"53276ff1f224f691dfe811e82c0af7f4476abf5d","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","hash":"315ad610d303caba9eac80a7d51002193a15478a","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","hash":"1bece084b1dbbbd4af064f05feffd8c332b96a48","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","hash":"e9c190f9ffc37a13cac430512e4e0c760205be4a","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","hash":"0c3ccd0d64e7504c7061d246dc32737f502f64e4","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","hash":"a6e8cfd2202afd7893f5268f3437421e35066e7b","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","hash":"e5c37646a9d9c1094f9aab7a7c65a4b242e8db00","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","hash":"51659351b391a2be5c68728bb51b7ad467c5e0db","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","hash":"501d75ef0f4385bea24d9b9b4cc434ba68d4be27","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","hash":"2aa9817e68fb2ed216781ea04b733039ebe18214","modified":1516012049000},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","hash":"933a3b196d01254dea5e6f48105ea15e210ae000","modified":1516012049000},{"_id":"themes/3-hexo/source/img/avatar.jpg","hash":"4487b7227c50f1f98c899bc4fbde1ba725dff32f","modified":1516012049000},{"_id":"themes/3-hexo/source/js/gitalk.js","hash":"302c788b6561f3d84ca031a275c4c75f82026616","modified":1516012049000},{"_id":"public/search.xml","hash":"4312f8a1a760041f80c9b548a649a5b608faf05b","modified":1516627831539},{"_id":"public/2018/01/22/food-politics-in-America/index.html","hash":"e96c2c768e713f9d8385fe1bf1c83615ac8f366d","modified":1516627831550},{"_id":"public/2018/01/22/substring-jump/index.html","hash":"f942d3cf1f237475975e18a3d42d5530ec247385","modified":1516627831550},{"_id":"public/2018/01/15/import-Sim-card-contacts-when-boot/index.html","hash":"0309f2a184bfda6f09902036f962a4bda92a63b6","modified":1516627831550},{"_id":"public/2018/01/05/Build-LineageOS-for-Nexus-5/index.html","hash":"e977115def5ade971554aa0ab57c9c15dce91910","modified":1516627831550},{"_id":"public/2018/01/03/Hexo-GitHub-Pages-Establish-blog/index.html","hash":"7be9f15f17e01c9abe84cbdc36665e65102e63a1","modified":1516627831550},{"_id":"public/2018/01/01/contacts-phone-number-fuzzy-search/index.html","hash":"29ff166e1de24076431789d54abfdaa516046fdd","modified":1516627831550},{"_id":"public/2015/08/10/access-across-processes/index.html","hash":"3685548cc35d5f575341a61e54c6d74bbb0e138c","modified":1516627831550},{"_id":"public/archives/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831550},{"_id":"public/archives/2015/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831550},{"_id":"public/archives/2015/08/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831550},{"_id":"public/archives/2018/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831550},{"_id":"public/archives/2018/01/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831551},{"_id":"public/categories/Android/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831551},{"_id":"public/categories/工具/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831551},{"_id":"public/categories/英语/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831551},{"_id":"public/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831551},{"_id":"public/tags/android/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831551},{"_id":"public/tags/cm/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831551},{"_id":"public/tags/lineageos/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831551},{"_id":"public/tags/面试/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831551},{"_id":"public/tags/contacts/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831551},{"_id":"public/tags/hexo/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831551},{"_id":"public/tags/blog/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831551},{"_id":"public/tags/english/index.html","hash":"cf385ad6d6e400583245aa040eac9527c33fd895","modified":1516627831551},{"_id":"public/CNAME","hash":"c56f07d65fc8c6c7d83fc8019100cf09216768e6","modified":1516627831554},{"_id":"public/img/alipay.jpg","hash":"f0d1fad4d14841cc3dd3b00c37e66ca9d2548020","modified":1516627831554},{"_id":"public/img/bg.jpg","hash":"331f382a62f46ac8819c3b408b21af4f92118cf7","modified":1516627831554},{"_id":"public/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1516627831554},{"_id":"public/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1516627831555},{"_id":"public/img/weixin.jpg","hash":"f0d1fad4d14841cc3dd3b00c37e66ca9d2548020","modified":1516627831555},{"_id":"public/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1516627831555},{"_id":"public/css/fonts/icomoon.svg","hash":"37ac1ef28b03f46bf3ad2606c86f0e1ec3e4405f","modified":1516627831555},{"_id":"public/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1516627831555},{"_id":"public/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1516627831555},{"_id":"public/css/mobile.css","hash":"102f04bcf1923b67882e1bb545ae6f331c1ce7cd","modified":1516627832028},{"_id":"public/js/jquery.autocomplete.min.js","hash":"8ee8b07ce5b0d2415ae36c9339d2a5c5e9e1caf0","modified":1516627832028},{"_id":"public/js/search.js","hash":"123d5488e492c6153fae24fffae54a6da927b92b","modified":1516627832028},{"_id":"public/css/hl_theme/atom-light.css","hash":"a3c8f3ee9a655594eff7ac545cb2e6914c1abcc2","modified":1516627832028},{"_id":"public/css/hl_theme/atom-dark.css","hash":"88d11052a24e8100af6248eb4dbe1ce7b0e96408","modified":1516627832028},{"_id":"public/css/hl_theme/brown-paper.css","hash":"500c8e750373f6656ff49a7857c871ceedcf8777","modified":1516627832028},{"_id":"public/css/hl_theme/darcula.css","hash":"4341074bae4bc9f0b86e32b623e27babc0159b6e","modified":1516627832028},{"_id":"public/css/hl_theme/github-gist.css","hash":"7a41c1c479d09df875f99f1f6d94aac42e9e2ad0","modified":1516627832028},{"_id":"public/css/hl_theme/github.css","hash":"e05a0806a508a26b9f3f3794b6b588ec6504ad3f","modified":1516627832028},{"_id":"public/css/hl_theme/gruvbox-dark.css","hash":"8c440d9b4ee19ac03eaee3c6af78ba52e5ba5535","modified":1516627832028},{"_id":"public/css/hl_theme/gruvbox-light.css","hash":"30514aaa242a34647aa666cfca4fc74c595ea8f2","modified":1516627832029},{"_id":"public/css/hl_theme/kimbie-dark.css","hash":"728527fcc308da454722c119b89e6da3025bd1e3","modified":1516627832029},{"_id":"public/css/hl_theme/kimbie-light.css","hash":"0c61926c989163faefb031d27bce3e287d6e10f2","modified":1516627832029},{"_id":"public/css/hl_theme/railscasts.css","hash":"511f2fd2a84d426e5da5cb17880cc08f73beb002","modified":1516627832029},{"_id":"public/css/hl_theme/rainbow.css","hash":"7ff4251938076ddb7e4e49413db82653e5b61321","modified":1516627832029},{"_id":"public/css/hl_theme/school-book.css","hash":"ffbbcd13a74ac2404262c50b7a43053dfd0096ff","modified":1516627832029},{"_id":"public/css/hl_theme/sunburst.css","hash":"8a135abac1512cf430d1d1ad2304b79afa1a4d6e","modified":1516627832029},{"_id":"public/css/hl_theme/sublime.css","hash":"f65c5b116d9213afb9c324384a2f3bc86cb71121","modified":1516627832029},{"_id":"public/css/hl_theme/zenbum.css","hash":"0a78f74a93568e20b32ca7427c719e9bae9a0b55","modified":1516627832029},{"_id":"public/css/style.css","hash":"9d258b1da6056cbde835e285d3fe99b64ee92d9a","modified":1516627832029},{"_id":"public/js/script.js","hash":"c3ce570b1b680fc7a3f066e876d397ed7c2d3aed","modified":1516627832029},{"_id":"public/css/fonts/selection.json","hash":"047b615ea32dc48dae5b964061427d41feaaafdf","modified":1516627832030},{"_id":"public/js/gitalk.js","hash":"302c788b6561f3d84ca031a275c4c75f82026616","modified":1516627832030},{"_id":"public/img/avatar.jpg","hash":"4487b7227c50f1f98c899bc4fbde1ba725dff32f","modified":1516627832032}],"Category":[{"name":"Android","_id":"cjcq91w0h0002zc8f964mi0z8"},{"name":"工具","_id":"cjcq91w0s000gzc8fxy2dc8hk"},{"name":"英语","_id":"cjcq91w0u000lzc8fyq4jcbro"}],"Data":[],"Page":[],"Post":[{"title":"Build LineageOS for Nexus 5","date":"2018-01-05T04:05:21.000Z","_content":"\n## dependences\nTo build LineageOS, you’ll need:\n\nFor Ubuntu 14.04:\n`\nbc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libesd0-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev\n`\n\nFor Ubuntu 16.04 (xenial), substitute:\n`\nlibwxgtk2.8-dev → libwxgtk3.0-dev\n`\n**Java**\nDifferent versions of LineageOS require different JDK (Java Development Kit) versions.\n\nLineageOS 14.1: OpenJDK 1.8 (install openjdk-8-jdk)\nLineageOS 11.0-13.0: OpenJDK 1.7 (install openjdk-7-jdk)\n\n**Enter the following to download the repo binary and make it executable (runnable):**\ncurl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo\nchmod a+x ~/bin/repo\n\n\n## Get source code\n```bash\n$ repo init -u https://github.com/LineageOS/android.git -b cm-14.1\n$ repo sync\n```\n\n**Prepare the device-specific code**\n```bash\n$ source build/envsetup.sh\n$ breakfast hammerhead\n```\n\n\n\n**Turn on caching to speed up build**\n\nMake use of ccache if you want to speed up subsequent builds by running:\n```bash\n$ export USE_CCACHE=1\n```\nand adding that line to your ~/.bashrc file. Then, specify the maximum amount of disk space you want ccache to use by typing this:\n```bash\n$ ccache -M 50G\n```\n\n## 添加私有库\nvim .repo/local_manifests/lge.xml\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<manifest>\n  <project name=\"TheMuppets/proprietary_vendor_lge.git\" path=\"vendor/lge\" remote=\"github\" />\n</manifest>\n```\n之后再 repo sync 一次。\n\n## 编译\nbrunch hammerhead\n\n\nPS:\n关于科学上网:\n1.将repo文件 https://android.googlesource.com/ 全部使用 https://aosp.tuna.tsinghua.edu.cn/ 代替。\n2.替换已有的 AOSP 源代码的 remote，将 .repo/manifest.xml 把其中的 aosp 这个 remote 的 fetch 从 https://android.googlesource.com 改为 https://aosp.tuna.tsinghua.edu.cn/。\n```\n<manifest>\n   <remote  name=\"aosp\"\n-           fetch=\"https://android.googlesource.com\"\n+           fetch=\"https://aosp.tuna.tsinghua.edu.cn\"\n            review=\"android-review.googlesource.com\" />\n   <remote  name=\"github\"\n```\n同时，修改 .repo/manifests.git/config，将\n``\nurl = https://android.googlesource.com/platform/manifest\n``\n更改为\n``\nurl = https://aosp.tuna.tsinghua.edu.cn/platform/manifest\n``","source":"_posts/Android/为Nexus编译LineageOS.md","raw":"---\ntitle: 'Build LineageOS for Nexus 5'\npermalink: 'Build-LineageOS-for-Nexus-5'\ndate: 2018-01-05 12:05:21\ncategories:\n- Android\ntags:\n- android\n- cm\n- lineageos\n---\n\n## dependences\nTo build LineageOS, you’ll need:\n\nFor Ubuntu 14.04:\n`\nbc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libesd0-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev\n`\n\nFor Ubuntu 16.04 (xenial), substitute:\n`\nlibwxgtk2.8-dev → libwxgtk3.0-dev\n`\n**Java**\nDifferent versions of LineageOS require different JDK (Java Development Kit) versions.\n\nLineageOS 14.1: OpenJDK 1.8 (install openjdk-8-jdk)\nLineageOS 11.0-13.0: OpenJDK 1.7 (install openjdk-7-jdk)\n\n**Enter the following to download the repo binary and make it executable (runnable):**\ncurl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo\nchmod a+x ~/bin/repo\n\n\n## Get source code\n```bash\n$ repo init -u https://github.com/LineageOS/android.git -b cm-14.1\n$ repo sync\n```\n\n**Prepare the device-specific code**\n```bash\n$ source build/envsetup.sh\n$ breakfast hammerhead\n```\n\n\n\n**Turn on caching to speed up build**\n\nMake use of ccache if you want to speed up subsequent builds by running:\n```bash\n$ export USE_CCACHE=1\n```\nand adding that line to your ~/.bashrc file. Then, specify the maximum amount of disk space you want ccache to use by typing this:\n```bash\n$ ccache -M 50G\n```\n\n## 添加私有库\nvim .repo/local_manifests/lge.xml\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<manifest>\n  <project name=\"TheMuppets/proprietary_vendor_lge.git\" path=\"vendor/lge\" remote=\"github\" />\n</manifest>\n```\n之后再 repo sync 一次。\n\n## 编译\nbrunch hammerhead\n\n\nPS:\n关于科学上网:\n1.将repo文件 https://android.googlesource.com/ 全部使用 https://aosp.tuna.tsinghua.edu.cn/ 代替。\n2.替换已有的 AOSP 源代码的 remote，将 .repo/manifest.xml 把其中的 aosp 这个 remote 的 fetch 从 https://android.googlesource.com 改为 https://aosp.tuna.tsinghua.edu.cn/。\n```\n<manifest>\n   <remote  name=\"aosp\"\n-           fetch=\"https://android.googlesource.com\"\n+           fetch=\"https://aosp.tuna.tsinghua.edu.cn\"\n            review=\"android-review.googlesource.com\" />\n   <remote  name=\"github\"\n```\n同时，修改 .repo/manifests.git/config，将\n``\nurl = https://android.googlesource.com/platform/manifest\n``\n更改为\n``\nurl = https://aosp.tuna.tsinghua.edu.cn/platform/manifest\n``","slug":"Build-LineageOS-for-Nexus-5","published":1,"updated":"2018-01-15T10:27:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcq91w0b0000zc8fhci127mo","content":"<h2 id=\"dependences\"><a href=\"#dependences\" class=\"headerlink\" title=\"dependences\"></a>dependences</h2><p>To build LineageOS, you’ll need:</p>\n<p>For Ubuntu 14.04:<br><code>bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libesd0-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev</code></p>\n<p>For Ubuntu 16.04 (xenial), substitute:<br><code>libwxgtk2.8-dev → libwxgtk3.0-dev</code><br><strong>Java</strong><br>Different versions of LineageOS require different JDK (Java Development Kit) versions.</p>\n<p>LineageOS 14.1: OpenJDK 1.8 (install openjdk-8-jdk)<br>LineageOS 11.0-13.0: OpenJDK 1.7 (install openjdk-7-jdk)</p>\n<p><strong>Enter the following to download the repo binary and make it executable (runnable):</strong><br>curl <a href=\"https://storage.googleapis.com/git-repo-downloads/repo\" target=\"_blank\" rel=\"noopener\">https://storage.googleapis.com/git-repo-downloads/repo</a> &gt; ~/bin/repo<br>chmod a+x ~/bin/repo</p>\n<h2 id=\"Get-source-code\"><a href=\"#Get-source-code\" class=\"headerlink\" title=\"Get source code\"></a>Get source code</h2><pre><code class=\"bash\">$ repo init -u https://github.com/LineageOS/android.git -b cm-14.1\n$ repo sync\n</code></pre>\n<p><strong>Prepare the device-specific code</strong></p>\n<pre><code class=\"bash\">$ source build/envsetup.sh\n$ breakfast hammerhead\n</code></pre>\n<p><strong>Turn on caching to speed up build</strong></p>\n<p>Make use of ccache if you want to speed up subsequent builds by running:</p>\n<pre><code class=\"bash\">$ export USE_CCACHE=1\n</code></pre>\n<p>and adding that line to your ~/.bashrc file. Then, specify the maximum amount of disk space you want ccache to use by typing this:</p>\n<pre><code class=\"bash\">$ ccache -M 50G\n</code></pre>\n<h2 id=\"添加私有库\"><a href=\"#添加私有库\" class=\"headerlink\" title=\"添加私有库\"></a>添加私有库</h2><p>vim .repo/local_manifests/lge.xml</p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;manifest&gt;\n  &lt;project name=&quot;TheMuppets/proprietary_vendor_lge.git&quot; path=&quot;vendor/lge&quot; remote=&quot;github&quot; /&gt;\n&lt;/manifest&gt;\n</code></pre><p>之后再 repo sync 一次。</p>\n<h2 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h2><p>brunch hammerhead</p>\n<p>PS:<br>关于科学上网:<br>1.将repo文件 <a href=\"https://android.googlesource.com/\" target=\"_blank\" rel=\"noopener\">https://android.googlesource.com/</a> 全部使用 <a href=\"https://aosp.tuna.tsinghua.edu.cn/\" target=\"_blank\" rel=\"noopener\">https://aosp.tuna.tsinghua.edu.cn/</a> 代替。<br>2.替换已有的 AOSP 源代码的 remote，将 .repo/manifest.xml 把其中的 aosp 这个 remote 的 fetch 从 <a href=\"https://android.googlesource.com\" target=\"_blank\" rel=\"noopener\">https://android.googlesource.com</a> 改为 <a href=\"https://aosp.tuna.tsinghua.edu.cn/。\" target=\"_blank\" rel=\"noopener\">https://aosp.tuna.tsinghua.edu.cn/。</a></p>\n<pre><code>&lt;manifest&gt;\n   &lt;remote  name=&quot;aosp&quot;\n-           fetch=&quot;https://android.googlesource.com&quot;\n+           fetch=&quot;https://aosp.tuna.tsinghua.edu.cn&quot;\n            review=&quot;android-review.googlesource.com&quot; /&gt;\n   &lt;remote  name=&quot;github&quot;\n</code></pre><p>同时，修改 .repo/manifests.git/config，将<br><code>url = https://android.googlesource.com/platform/manifest</code><br>更改为<br><code>url = https://aosp.tuna.tsinghua.edu.cn/platform/manifest</code></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"dependences\"><a href=\"#dependences\" class=\"headerlink\" title=\"dependences\"></a>dependences</h2><p>To build LineageOS, you’ll need:</p>\n<p>For Ubuntu 14.04:<br><code>bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libesd0-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev</code></p>\n<p>For Ubuntu 16.04 (xenial), substitute:<br><code>libwxgtk2.8-dev → libwxgtk3.0-dev</code><br><strong>Java</strong><br>Different versions of LineageOS require different JDK (Java Development Kit) versions.</p>\n<p>LineageOS 14.1: OpenJDK 1.8 (install openjdk-8-jdk)<br>LineageOS 11.0-13.0: OpenJDK 1.7 (install openjdk-7-jdk)</p>\n<p><strong>Enter the following to download the repo binary and make it executable (runnable):</strong><br>curl <a href=\"https://storage.googleapis.com/git-repo-downloads/repo\" target=\"_blank\" rel=\"noopener\">https://storage.googleapis.com/git-repo-downloads/repo</a> &gt; ~/bin/repo<br>chmod a+x ~/bin/repo</p>\n<h2 id=\"Get-source-code\"><a href=\"#Get-source-code\" class=\"headerlink\" title=\"Get source code\"></a>Get source code</h2><pre><code class=\"bash\">$ repo init -u https://github.com/LineageOS/android.git -b cm-14.1\n$ repo sync\n</code></pre>\n<p><strong>Prepare the device-specific code</strong></p>\n<pre><code class=\"bash\">$ source build/envsetup.sh\n$ breakfast hammerhead\n</code></pre>\n<p><strong>Turn on caching to speed up build</strong></p>\n<p>Make use of ccache if you want to speed up subsequent builds by running:</p>\n<pre><code class=\"bash\">$ export USE_CCACHE=1\n</code></pre>\n<p>and adding that line to your ~/.bashrc file. Then, specify the maximum amount of disk space you want ccache to use by typing this:</p>\n<pre><code class=\"bash\">$ ccache -M 50G\n</code></pre>\n<h2 id=\"添加私有库\"><a href=\"#添加私有库\" class=\"headerlink\" title=\"添加私有库\"></a>添加私有库</h2><p>vim .repo/local_manifests/lge.xml</p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;manifest&gt;\n  &lt;project name=&quot;TheMuppets/proprietary_vendor_lge.git&quot; path=&quot;vendor/lge&quot; remote=&quot;github&quot; /&gt;\n&lt;/manifest&gt;\n</code></pre><p>之后再 repo sync 一次。</p>\n<h2 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h2><p>brunch hammerhead</p>\n<p>PS:<br>关于科学上网:<br>1.将repo文件 <a href=\"https://android.googlesource.com/\" target=\"_blank\" rel=\"noopener\">https://android.googlesource.com/</a> 全部使用 <a href=\"https://aosp.tuna.tsinghua.edu.cn/\" target=\"_blank\" rel=\"noopener\">https://aosp.tuna.tsinghua.edu.cn/</a> 代替。<br>2.替换已有的 AOSP 源代码的 remote，将 .repo/manifest.xml 把其中的 aosp 这个 remote 的 fetch 从 <a href=\"https://android.googlesource.com\" target=\"_blank\" rel=\"noopener\">https://android.googlesource.com</a> 改为 <a href=\"https://aosp.tuna.tsinghua.edu.cn/。\" target=\"_blank\" rel=\"noopener\">https://aosp.tuna.tsinghua.edu.cn/。</a></p>\n<pre><code>&lt;manifest&gt;\n   &lt;remote  name=&quot;aosp&quot;\n-           fetch=&quot;https://android.googlesource.com&quot;\n+           fetch=&quot;https://aosp.tuna.tsinghua.edu.cn&quot;\n            review=&quot;android-review.googlesource.com&quot; /&gt;\n   &lt;remote  name=&quot;github&quot;\n</code></pre><p>同时，修改 .repo/manifests.git/config，将<br><code>url = https://android.googlesource.com/platform/manifest</code><br>更改为<br><code>url = https://aosp.tuna.tsinghua.edu.cn/platform/manifest</code></p>\n"},{"title":"开机导入Sim卡联系人","date":"2018-01-15T14:54:34.000Z","_content":"\n## ContactsProvider\n１.ContactsProvider.apk会启动一个广播接收器SystemStartReceiver来接收BOOT_COMPLETED的广播。\n\n２.ContactsProvider收到该广播后，将raw_contacts表里所有非本地联系人的数据都删除掉。\n然后读取当前是否存在Sim卡，若存在，则发SYNC_ICC_CARD_CONTACTS广播。\n\n3.SystemStartReceiver收到广播后启动一个thread来执行读取sim卡联系人，并发送MSG_NOTIFY_ICC_LOADING的message给主线程，主线程收到后发loadicccontacts广播。\n\n4.开始读取ICC数据库的内容，IccProvider中会执行loadFromEf()，获得IIccPhoneBook接口，通过AIDL调用getAdnRecordsInEf()方法，获取sim卡上的全部联系人数据，返回cursor并装载成ArrayList。\n\n5.子线程给主线程发送MSG_NOTIFY_ICC_CHECKFINISHING的message，表示ICC读取完毕。主线程会发loadicccontacts广播。\n\n6.子线程发送消息MSG_INSERT_NEW_CONTACTS给主线程，进行数据库批量处理的操作，即把几个ContentProviderOperation打包在一起，Transaction事务机制，通过applyBatch()方法，主线程将这些sim卡联系人逐个的添加到raw_contacts表和data表中.\n\n## Contacts\nContacts 收到loadicccontacts的广播，设置当前sim卡联系人已经开始读取，LOADICC_START\nContacts 收到loadicccontacts的广播，设置当前sim卡联系人已经读取完毕，LOADICC_FINISH\n","source":"_posts/Android/开机导入Sim卡联系人.md","raw":"---\ntitle: 开机导入Sim卡联系人\npermalink: import-Sim-card-contacts-when-boot\ncategories:\n  - Android\ntags:\n  - android\n  - 面试\n  - contacts\ndate: 2018-01-15 22:54:34\n---\n\n## ContactsProvider\n１.ContactsProvider.apk会启动一个广播接收器SystemStartReceiver来接收BOOT_COMPLETED的广播。\n\n２.ContactsProvider收到该广播后，将raw_contacts表里所有非本地联系人的数据都删除掉。\n然后读取当前是否存在Sim卡，若存在，则发SYNC_ICC_CARD_CONTACTS广播。\n\n3.SystemStartReceiver收到广播后启动一个thread来执行读取sim卡联系人，并发送MSG_NOTIFY_ICC_LOADING的message给主线程，主线程收到后发loadicccontacts广播。\n\n4.开始读取ICC数据库的内容，IccProvider中会执行loadFromEf()，获得IIccPhoneBook接口，通过AIDL调用getAdnRecordsInEf()方法，获取sim卡上的全部联系人数据，返回cursor并装载成ArrayList。\n\n5.子线程给主线程发送MSG_NOTIFY_ICC_CHECKFINISHING的message，表示ICC读取完毕。主线程会发loadicccontacts广播。\n\n6.子线程发送消息MSG_INSERT_NEW_CONTACTS给主线程，进行数据库批量处理的操作，即把几个ContentProviderOperation打包在一起，Transaction事务机制，通过applyBatch()方法，主线程将这些sim卡联系人逐个的添加到raw_contacts表和data表中.\n\n## Contacts\nContacts 收到loadicccontacts的广播，设置当前sim卡联系人已经开始读取，LOADICC_START\nContacts 收到loadicccontacts的广播，设置当前sim卡联系人已经读取完毕，LOADICC_FINISH\n","slug":"import-Sim-card-contacts-when-boot","published":1,"updated":"2018-01-15T14:58:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcq91w0f0001zc8f6krdisn1","content":"<h2 id=\"ContactsProvider\"><a href=\"#ContactsProvider\" class=\"headerlink\" title=\"ContactsProvider\"></a>ContactsProvider</h2><p>１.ContactsProvider.apk会启动一个广播接收器SystemStartReceiver来接收BOOT_COMPLETED的广播。</p>\n<p>２.ContactsProvider收到该广播后，将raw_contacts表里所有非本地联系人的数据都删除掉。<br>然后读取当前是否存在Sim卡，若存在，则发SYNC_ICC_CARD_CONTACTS广播。</p>\n<p>3.SystemStartReceiver收到广播后启动一个thread来执行读取sim卡联系人，并发送MSG_NOTIFY_ICC_LOADING的message给主线程，主线程收到后发loadicccontacts广播。</p>\n<p>4.开始读取ICC数据库的内容，IccProvider中会执行loadFromEf()，获得IIccPhoneBook接口，通过AIDL调用getAdnRecordsInEf()方法，获取sim卡上的全部联系人数据，返回cursor并装载成ArrayList。</p>\n<p>5.子线程给主线程发送MSG_NOTIFY_ICC_CHECKFINISHING的message，表示ICC读取完毕。主线程会发loadicccontacts广播。</p>\n<p>6.子线程发送消息MSG_INSERT_NEW_CONTACTS给主线程，进行数据库批量处理的操作，即把几个ContentProviderOperation打包在一起，Transaction事务机制，通过applyBatch()方法，主线程将这些sim卡联系人逐个的添加到raw_contacts表和data表中.</p>\n<h2 id=\"Contacts\"><a href=\"#Contacts\" class=\"headerlink\" title=\"Contacts\"></a>Contacts</h2><p>Contacts 收到loadicccontacts的广播，设置当前sim卡联系人已经开始读取，LOADICC_START<br>Contacts 收到loadicccontacts的广播，设置当前sim卡联系人已经读取完毕，LOADICC_FINISH</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"ContactsProvider\"><a href=\"#ContactsProvider\" class=\"headerlink\" title=\"ContactsProvider\"></a>ContactsProvider</h2><p>１.ContactsProvider.apk会启动一个广播接收器SystemStartReceiver来接收BOOT_COMPLETED的广播。</p>\n<p>２.ContactsProvider收到该广播后，将raw_contacts表里所有非本地联系人的数据都删除掉。<br>然后读取当前是否存在Sim卡，若存在，则发SYNC_ICC_CARD_CONTACTS广播。</p>\n<p>3.SystemStartReceiver收到广播后启动一个thread来执行读取sim卡联系人，并发送MSG_NOTIFY_ICC_LOADING的message给主线程，主线程收到后发loadicccontacts广播。</p>\n<p>4.开始读取ICC数据库的内容，IccProvider中会执行loadFromEf()，获得IIccPhoneBook接口，通过AIDL调用getAdnRecordsInEf()方法，获取sim卡上的全部联系人数据，返回cursor并装载成ArrayList。</p>\n<p>5.子线程给主线程发送MSG_NOTIFY_ICC_CHECKFINISHING的message，表示ICC读取完毕。主线程会发loadicccontacts广播。</p>\n<p>6.子线程发送消息MSG_INSERT_NEW_CONTACTS给主线程，进行数据库批量处理的操作，即把几个ContentProviderOperation打包在一起，Transaction事务机制，通过applyBatch()方法，主线程将这些sim卡联系人逐个的添加到raw_contacts表和data表中.</p>\n<h2 id=\"Contacts\"><a href=\"#Contacts\" class=\"headerlink\" title=\"Contacts\"></a>Contacts</h2><p>Contacts 收到loadicccontacts的广播，设置当前sim卡联系人已经开始读取，LOADICC_START<br>Contacts 收到loadicccontacts的广播，设置当前sim卡联系人已经读取完毕，LOADICC_FINISH</p>\n"},{"title":"多语言下，String子串可点击并实现跳转","date":"2018-01-22T09:53:49.000Z","_content":"\n## 总结\n通过Spannable实现色彩效果，ClickableSpan实现点击。\n\n对于resource string，通过添加标签位，来计算不同语言下，可点击的substring的index\n\n## 工具类\n\n```java\n//LinkifyUtils.java\npublic class LinkifyUtils {\n    private static final String PLACE_HOLDER_LINK_BEGIN = \"LINK_BEGIN\";\n    private static final String PLACE_HOLDER_LINK_END = \"LINK_END\";\n\n    private LinkifyUtils() {\n    }\n\n    /** Interface that handles the click event of the link */\n    public interface OnClickListener {\n        void onClick();\n    }\n\n    /**\n     * Applies the text into the {@link TextView} and part of it a clickable link.\n     * The text surrounded with \"LINK_BEGIN\" and \"LINK_END\" will become a clickable link. Only\n     * supports at most one link.\n     * @return true if the link has been successfully applied, or false if the original text\n     *         contains no link place holders.\n     */\n    public static boolean linkify(TextView textView, StringBuilder text,\n                                  final OnClickListener listener) {\n        // Remove place-holders from the string and record their positions\n        final int beginIndex = text.indexOf(PLACE_HOLDER_LINK_BEGIN);\n        if (beginIndex == -1) {\n            textView.setText(text);\n            return false;\n        }\n        text.delete(beginIndex, beginIndex + PLACE_HOLDER_LINK_BEGIN.length());\n        final int endIndex = text.indexOf(PLACE_HOLDER_LINK_END);\n        if (endIndex == -1) {\n            textView.setText(text);\n            return false;\n        }\n        text.delete(endIndex, endIndex + PLACE_HOLDER_LINK_END.length());\n\n        textView.setText(text.toString(), TextView.BufferType.SPANNABLE);\n        textView.setMovementMethod(LinkMovementMethod.getInstance());\n        Spannable spannableContent = (Spannable) textView.getText();\n        ClickableSpan spannableLink = new ClickableSpan() {\n            @Override\n            public void onClick(View widget) {\n                listener.onClick();\n            }\n\n            @Override\n            public void updateDrawState(TextPaint ds) {\n                super.updateDrawState(ds);\n                ds.setUnderlineText(false);\n            }\n        };\n        spannableContent.setSpan(spannableLink, beginIndex, endIndex,\n                Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\n        return true;\n    }\n}\n```\n\n## UI界面\n\n```java\n//XXXActivity.java\n        StringBuilder contentBuilder = new StringBuilder();\n        contentBuilder.append(getText(R.string.no_internet));\n        LinkifyUtils.linkify(tvEmpty, contentBuilder, new LinkifyUtils.OnClickListener() {\n            @Override\n            public void onClick() {\n                Intent intent = new Intent();\n                intent.setClassName(\"com.android.settings\", \"com.android.settings.wifi.WifiSettings\");\n                startActivity(intent);\n            }\n        });\n```\n\n```xml\n<string name=\"no_internet\">No internet connection. Make sure  <xliff:g id=\"link_begin\">LINK_BEGIN</xliff:g>Wi-Fi<xliff:g id=\"link_end\">LINK_END</xliff:g> is turned on, then try again.</string>\n\n<string name=\"no_internet\">未连接到互联网。请确保  <xliff:g id=\"link_begin\">LINK_BEGIN</xliff:g>Wi-Fi<xliff:g id=\"link_end\">LINK_END</xliff:g> 网路已开启，然后重试。</string>\n\n```\n","source":"_posts/Android/多语言下，String子串可点击并实现跳转.md","raw":"---\ntitle: 多语言下，String子串可点击并实现跳转\npermalink: substring-jump\ncategories:\n  - Android\ntags:\n  - android\ndate: 2018-01-22 17:53:49\n---\n\n## 总结\n通过Spannable实现色彩效果，ClickableSpan实现点击。\n\n对于resource string，通过添加标签位，来计算不同语言下，可点击的substring的index\n\n## 工具类\n\n```java\n//LinkifyUtils.java\npublic class LinkifyUtils {\n    private static final String PLACE_HOLDER_LINK_BEGIN = \"LINK_BEGIN\";\n    private static final String PLACE_HOLDER_LINK_END = \"LINK_END\";\n\n    private LinkifyUtils() {\n    }\n\n    /** Interface that handles the click event of the link */\n    public interface OnClickListener {\n        void onClick();\n    }\n\n    /**\n     * Applies the text into the {@link TextView} and part of it a clickable link.\n     * The text surrounded with \"LINK_BEGIN\" and \"LINK_END\" will become a clickable link. Only\n     * supports at most one link.\n     * @return true if the link has been successfully applied, or false if the original text\n     *         contains no link place holders.\n     */\n    public static boolean linkify(TextView textView, StringBuilder text,\n                                  final OnClickListener listener) {\n        // Remove place-holders from the string and record their positions\n        final int beginIndex = text.indexOf(PLACE_HOLDER_LINK_BEGIN);\n        if (beginIndex == -1) {\n            textView.setText(text);\n            return false;\n        }\n        text.delete(beginIndex, beginIndex + PLACE_HOLDER_LINK_BEGIN.length());\n        final int endIndex = text.indexOf(PLACE_HOLDER_LINK_END);\n        if (endIndex == -1) {\n            textView.setText(text);\n            return false;\n        }\n        text.delete(endIndex, endIndex + PLACE_HOLDER_LINK_END.length());\n\n        textView.setText(text.toString(), TextView.BufferType.SPANNABLE);\n        textView.setMovementMethod(LinkMovementMethod.getInstance());\n        Spannable spannableContent = (Spannable) textView.getText();\n        ClickableSpan spannableLink = new ClickableSpan() {\n            @Override\n            public void onClick(View widget) {\n                listener.onClick();\n            }\n\n            @Override\n            public void updateDrawState(TextPaint ds) {\n                super.updateDrawState(ds);\n                ds.setUnderlineText(false);\n            }\n        };\n        spannableContent.setSpan(spannableLink, beginIndex, endIndex,\n                Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\n        return true;\n    }\n}\n```\n\n## UI界面\n\n```java\n//XXXActivity.java\n        StringBuilder contentBuilder = new StringBuilder();\n        contentBuilder.append(getText(R.string.no_internet));\n        LinkifyUtils.linkify(tvEmpty, contentBuilder, new LinkifyUtils.OnClickListener() {\n            @Override\n            public void onClick() {\n                Intent intent = new Intent();\n                intent.setClassName(\"com.android.settings\", \"com.android.settings.wifi.WifiSettings\");\n                startActivity(intent);\n            }\n        });\n```\n\n```xml\n<string name=\"no_internet\">No internet connection. Make sure  <xliff:g id=\"link_begin\">LINK_BEGIN</xliff:g>Wi-Fi<xliff:g id=\"link_end\">LINK_END</xliff:g> is turned on, then try again.</string>\n\n<string name=\"no_internet\">未连接到互联网。请确保  <xliff:g id=\"link_begin\">LINK_BEGIN</xliff:g>Wi-Fi<xliff:g id=\"link_end\">LINK_END</xliff:g> 网路已开启，然后重试。</string>\n\n```\n","slug":"substring-jump","published":1,"updated":"2018-01-22T12:10:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcq91w0j0004zc8fyt98sv05","content":"<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>通过Spannable实现色彩效果，ClickableSpan实现点击。</p>\n<p>对于resource string，通过添加标签位，来计算不同语言下，可点击的substring的index</p>\n<h2 id=\"工具类\"><a href=\"#工具类\" class=\"headerlink\" title=\"工具类\"></a>工具类</h2><pre><code class=\"java\">//LinkifyUtils.java\npublic class LinkifyUtils {\n    private static final String PLACE_HOLDER_LINK_BEGIN = &quot;LINK_BEGIN&quot;;\n    private static final String PLACE_HOLDER_LINK_END = &quot;LINK_END&quot;;\n\n    private LinkifyUtils() {\n    }\n\n    /** Interface that handles the click event of the link */\n    public interface OnClickListener {\n        void onClick();\n    }\n\n    /**\n     * Applies the text into the {@link TextView} and part of it a clickable link.\n     * The text surrounded with &quot;LINK_BEGIN&quot; and &quot;LINK_END&quot; will become a clickable link. Only\n     * supports at most one link.\n     * @return true if the link has been successfully applied, or false if the original text\n     *         contains no link place holders.\n     */\n    public static boolean linkify(TextView textView, StringBuilder text,\n                                  final OnClickListener listener) {\n        // Remove place-holders from the string and record their positions\n        final int beginIndex = text.indexOf(PLACE_HOLDER_LINK_BEGIN);\n        if (beginIndex == -1) {\n            textView.setText(text);\n            return false;\n        }\n        text.delete(beginIndex, beginIndex + PLACE_HOLDER_LINK_BEGIN.length());\n        final int endIndex = text.indexOf(PLACE_HOLDER_LINK_END);\n        if (endIndex == -1) {\n            textView.setText(text);\n            return false;\n        }\n        text.delete(endIndex, endIndex + PLACE_HOLDER_LINK_END.length());\n\n        textView.setText(text.toString(), TextView.BufferType.SPANNABLE);\n        textView.setMovementMethod(LinkMovementMethod.getInstance());\n        Spannable spannableContent = (Spannable) textView.getText();\n        ClickableSpan spannableLink = new ClickableSpan() {\n            @Override\n            public void onClick(View widget) {\n                listener.onClick();\n            }\n\n            @Override\n            public void updateDrawState(TextPaint ds) {\n                super.updateDrawState(ds);\n                ds.setUnderlineText(false);\n            }\n        };\n        spannableContent.setSpan(spannableLink, beginIndex, endIndex,\n                Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\n        return true;\n    }\n}\n</code></pre>\n<h2 id=\"UI界面\"><a href=\"#UI界面\" class=\"headerlink\" title=\"UI界面\"></a>UI界面</h2><pre><code class=\"java\">//XXXActivity.java\n        StringBuilder contentBuilder = new StringBuilder();\n        contentBuilder.append(getText(R.string.no_internet));\n        LinkifyUtils.linkify(tvEmpty, contentBuilder, new LinkifyUtils.OnClickListener() {\n            @Override\n            public void onClick() {\n                Intent intent = new Intent();\n                intent.setClassName(&quot;com.android.settings&quot;, &quot;com.android.settings.wifi.WifiSettings&quot;);\n                startActivity(intent);\n            }\n        });\n</code></pre>\n<pre><code class=\"xml\">&lt;string name=&quot;no_internet&quot;&gt;No internet connection. Make sure  &lt;xliff:g id=&quot;link_begin&quot;&gt;LINK_BEGIN&lt;/xliff:g&gt;Wi-Fi&lt;xliff:g id=&quot;link_end&quot;&gt;LINK_END&lt;/xliff:g&gt; is turned on, then try again.&lt;/string&gt;\n\n&lt;string name=&quot;no_internet&quot;&gt;未连接到互联网。请确保  &lt;xliff:g id=&quot;link_begin&quot;&gt;LINK_BEGIN&lt;/xliff:g&gt;Wi-Fi&lt;xliff:g id=&quot;link_end&quot;&gt;LINK_END&lt;/xliff:g&gt; 网路已开启，然后重试。&lt;/string&gt;\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>通过Spannable实现色彩效果，ClickableSpan实现点击。</p>\n<p>对于resource string，通过添加标签位，来计算不同语言下，可点击的substring的index</p>\n<h2 id=\"工具类\"><a href=\"#工具类\" class=\"headerlink\" title=\"工具类\"></a>工具类</h2><pre><code class=\"java\">//LinkifyUtils.java\npublic class LinkifyUtils {\n    private static final String PLACE_HOLDER_LINK_BEGIN = &quot;LINK_BEGIN&quot;;\n    private static final String PLACE_HOLDER_LINK_END = &quot;LINK_END&quot;;\n\n    private LinkifyUtils() {\n    }\n\n    /** Interface that handles the click event of the link */\n    public interface OnClickListener {\n        void onClick();\n    }\n\n    /**\n     * Applies the text into the {@link TextView} and part of it a clickable link.\n     * The text surrounded with &quot;LINK_BEGIN&quot; and &quot;LINK_END&quot; will become a clickable link. Only\n     * supports at most one link.\n     * @return true if the link has been successfully applied, or false if the original text\n     *         contains no link place holders.\n     */\n    public static boolean linkify(TextView textView, StringBuilder text,\n                                  final OnClickListener listener) {\n        // Remove place-holders from the string and record their positions\n        final int beginIndex = text.indexOf(PLACE_HOLDER_LINK_BEGIN);\n        if (beginIndex == -1) {\n            textView.setText(text);\n            return false;\n        }\n        text.delete(beginIndex, beginIndex + PLACE_HOLDER_LINK_BEGIN.length());\n        final int endIndex = text.indexOf(PLACE_HOLDER_LINK_END);\n        if (endIndex == -1) {\n            textView.setText(text);\n            return false;\n        }\n        text.delete(endIndex, endIndex + PLACE_HOLDER_LINK_END.length());\n\n        textView.setText(text.toString(), TextView.BufferType.SPANNABLE);\n        textView.setMovementMethod(LinkMovementMethod.getInstance());\n        Spannable spannableContent = (Spannable) textView.getText();\n        ClickableSpan spannableLink = new ClickableSpan() {\n            @Override\n            public void onClick(View widget) {\n                listener.onClick();\n            }\n\n            @Override\n            public void updateDrawState(TextPaint ds) {\n                super.updateDrawState(ds);\n                ds.setUnderlineText(false);\n            }\n        };\n        spannableContent.setSpan(spannableLink, beginIndex, endIndex,\n                Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\n        return true;\n    }\n}\n</code></pre>\n<h2 id=\"UI界面\"><a href=\"#UI界面\" class=\"headerlink\" title=\"UI界面\"></a>UI界面</h2><pre><code class=\"java\">//XXXActivity.java\n        StringBuilder contentBuilder = new StringBuilder();\n        contentBuilder.append(getText(R.string.no_internet));\n        LinkifyUtils.linkify(tvEmpty, contentBuilder, new LinkifyUtils.OnClickListener() {\n            @Override\n            public void onClick() {\n                Intent intent = new Intent();\n                intent.setClassName(&quot;com.android.settings&quot;, &quot;com.android.settings.wifi.WifiSettings&quot;);\n                startActivity(intent);\n            }\n        });\n</code></pre>\n<pre><code class=\"xml\">&lt;string name=&quot;no_internet&quot;&gt;No internet connection. Make sure  &lt;xliff:g id=&quot;link_begin&quot;&gt;LINK_BEGIN&lt;/xliff:g&gt;Wi-Fi&lt;xliff:g id=&quot;link_end&quot;&gt;LINK_END&lt;/xliff:g&gt; is turned on, then try again.&lt;/string&gt;\n\n&lt;string name=&quot;no_internet&quot;&gt;未连接到互联网。请确保  &lt;xliff:g id=&quot;link_begin&quot;&gt;LINK_BEGIN&lt;/xliff:g&gt;Wi-Fi&lt;xliff:g id=&quot;link_end&quot;&gt;LINK_END&lt;/xliff:g&gt; 网路已开启，然后重试。&lt;/string&gt;\n</code></pre>\n"},{"title":"联系人号码模糊查询","date":"2018-01-01T03:37:02.000Z","_content":"\nAOSP的联系人查询,匹配的号码是从头开始匹配,不支持任意子串的匹配.eg.1234567, 123能匹配, 456不能匹配。\n\n首先由于这是个运营商的定制feature,加入的相应的overlay的flag.只有是该运营商才会进行模糊查询。\n\n具体的流程就是修改ContactsProvider中的query流程. 原本的是match完全匹配。\n\n主体部分：\n先是进行判断,如果是该运营商,就修改查询的条件, 把字串前后加上通配符'%', 通过like关键字来进行模糊匹配.并返回结果。\n如果不是该运营商, 就执行之前的默认的操作,并返回结果。\n\n这样就实现了联系人号码模糊查询。\n","source":"_posts/Android/联系人号码模糊查询.md","raw":"---\ntitle: 联系人号码模糊查询\npermalink: contacts-phone-number-fuzzy-search\ncategories:\n  - Android\ntags:\n  - android\n  - contacts\ndate: 2018-01-01 11:37:02\n---\n\nAOSP的联系人查询,匹配的号码是从头开始匹配,不支持任意子串的匹配.eg.1234567, 123能匹配, 456不能匹配。\n\n首先由于这是个运营商的定制feature,加入的相应的overlay的flag.只有是该运营商才会进行模糊查询。\n\n具体的流程就是修改ContactsProvider中的query流程. 原本的是match完全匹配。\n\n主体部分：\n先是进行判断,如果是该运营商,就修改查询的条件, 把字串前后加上通配符'%', 通过like关键字来进行模糊匹配.并返回结果。\n如果不是该运营商, 就执行之前的默认的操作,并返回结果。\n\n这样就实现了联系人号码模糊查询。\n","slug":"contacts-phone-number-fuzzy-search","published":1,"updated":"2018-01-15T14:41:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcq91w0l0005zc8fesau3g64","content":"<p>AOSP的联系人查询,匹配的号码是从头开始匹配,不支持任意子串的匹配.eg.1234567, 123能匹配, 456不能匹配。</p>\n<p>首先由于这是个运营商的定制feature,加入的相应的overlay的flag.只有是该运营商才会进行模糊查询。</p>\n<p>具体的流程就是修改ContactsProvider中的query流程. 原本的是match完全匹配。</p>\n<p>主体部分：<br>先是进行判断,如果是该运营商,就修改查询的条件, 把字串前后加上通配符’%’, 通过like关键字来进行模糊匹配.并返回结果。<br>如果不是该运营商, 就执行之前的默认的操作,并返回结果。</p>\n<p>这样就实现了联系人号码模糊查询。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>AOSP的联系人查询,匹配的号码是从头开始匹配,不支持任意子串的匹配.eg.1234567, 123能匹配, 456不能匹配。</p>\n<p>首先由于这是个运营商的定制feature,加入的相应的overlay的flag.只有是该运营商才会进行模糊查询。</p>\n<p>具体的流程就是修改ContactsProvider中的query流程. 原本的是match完全匹配。</p>\n<p>主体部分：<br>先是进行判断,如果是该运营商,就修改查询的条件, 把字串前后加上通配符’%’, 通过like关键字来进行模糊匹配.并返回结果。<br>如果不是该运营商, 就执行之前的默认的操作,并返回结果。</p>\n<p>这样就实现了联系人号码模糊查询。</p>\n"},{"title":"Hexo+GitHub Pages搭建属于自己的blog","date":"2018-01-03T12:34:01.000Z","_content":"\nHexo是一个快速，简单，功能强大的开源博客框架-》[官网](https://hexo.io/)\nGitHub Pages 是一个不受限的网站空间。\n两者相得益彰。给那些喜欢自己折腾的人提供一些借鉴。\n<!--more -->\n## 搭建过程\n### 环境介绍\n博主使用系统：Ubuntu 14.04\n安装 node与npm\n### 安装Hexo\n```bash\nnpm install hexo-cli -g\n```\n### 初始化blog\n```bash\nhexo init blog\n```\n至此，本地blog已经创建完成，是不是很简单，简单到没朋友\n### 选择主题\n可以在[hexo官网](https://hexo.io/themes/)查看自己喜欢的主题\n通过git clone [url] themes/xxx 将主题克隆到本地，\n修改 `_config.yml` 中的theme：xxx\n### 常用命令\n```bash\n#创建一个新的文章\n$ hexo new \"文章名\"\n\n#生成静态文件\n$ hexo generate\n\n#将一个草稿发布出去\n$ hexo publish [layout] <filename>\n\n#启动一个本地服务器\n$ hexo server\n```\n更多命令移步[官方文档](https://hexo.io/docs/commands.html)\n### 搭建github pages\n本地blog已经搭建完成，现在可以发布到github pages上\n#### 注册github账户\n到[github官网](https://github.com/)注册一个github账户\n#### 配置登录免密码\n移步 {% post_link 一个客户端设置多个github账号 %}\n#### 创建github远程仓库\n在github上创建一个仓库 `xxx.github.io` xxx为自己的github用户名\n#### 安装插件\n```bash\n$ npm install hexo-deployer-git --save\n```\n#### 配置Hexo\n修改 `_comfig.yml`,xxx为你的用户名\n```xml\ndeploy:\n   type: git\n   repo: git@github.com:xxx/xxx.github.io.git\n   branch: master\n```\n#### 推送服务器\n```bash\n$ hexo deploy\n```\n>若出现`ERROR Deployer not found: git`报错，请执行上面安装插件步骤\n\n#### 测试\n打开 `xxx.github.io` ，就能看到你的blog了\n","source":"_posts/工具/Hexo-GitHub-Pages搭建属于自己的blog.md","raw":"---\ntitle: Hexo+GitHub Pages搭建属于自己的blog\npermalink: Hexo-GitHub-Pages-Establish-blog\ncategories:\n- 工具\ntags:\n- hexo\n- blog\ndate: 2018-01-03 20:34:01\n---\n\nHexo是一个快速，简单，功能强大的开源博客框架-》[官网](https://hexo.io/)\nGitHub Pages 是一个不受限的网站空间。\n两者相得益彰。给那些喜欢自己折腾的人提供一些借鉴。\n<!--more -->\n## 搭建过程\n### 环境介绍\n博主使用系统：Ubuntu 14.04\n安装 node与npm\n### 安装Hexo\n```bash\nnpm install hexo-cli -g\n```\n### 初始化blog\n```bash\nhexo init blog\n```\n至此，本地blog已经创建完成，是不是很简单，简单到没朋友\n### 选择主题\n可以在[hexo官网](https://hexo.io/themes/)查看自己喜欢的主题\n通过git clone [url] themes/xxx 将主题克隆到本地，\n修改 `_config.yml` 中的theme：xxx\n### 常用命令\n```bash\n#创建一个新的文章\n$ hexo new \"文章名\"\n\n#生成静态文件\n$ hexo generate\n\n#将一个草稿发布出去\n$ hexo publish [layout] <filename>\n\n#启动一个本地服务器\n$ hexo server\n```\n更多命令移步[官方文档](https://hexo.io/docs/commands.html)\n### 搭建github pages\n本地blog已经搭建完成，现在可以发布到github pages上\n#### 注册github账户\n到[github官网](https://github.com/)注册一个github账户\n#### 配置登录免密码\n移步 {% post_link 一个客户端设置多个github账号 %}\n#### 创建github远程仓库\n在github上创建一个仓库 `xxx.github.io` xxx为自己的github用户名\n#### 安装插件\n```bash\n$ npm install hexo-deployer-git --save\n```\n#### 配置Hexo\n修改 `_comfig.yml`,xxx为你的用户名\n```xml\ndeploy:\n   type: git\n   repo: git@github.com:xxx/xxx.github.io.git\n   branch: master\n```\n#### 推送服务器\n```bash\n$ hexo deploy\n```\n>若出现`ERROR Deployer not found: git`报错，请执行上面安装插件步骤\n\n#### 测试\n打开 `xxx.github.io` ，就能看到你的blog了\n","slug":"Hexo-GitHub-Pages-Establish-blog","published":1,"updated":"2018-01-15T14:14:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcq91w0m0006zc8fz7sp0tjq","content":"<p>Hexo是一个快速，简单，功能强大的开源博客框架-》<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">官网</a><br>GitHub Pages 是一个不受限的网站空间。<br>两者相得益彰。给那些喜欢自己折腾的人提供一些借鉴。<br><a id=\"more\"></a></p>\n<h2 id=\"搭建过程\"><a href=\"#搭建过程\" class=\"headerlink\" title=\"搭建过程\"></a>搭建过程</h2><h3 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h3><p>博主使用系统：Ubuntu 14.04<br>安装 node与npm</p>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><pre><code class=\"bash\">npm install hexo-cli -g\n</code></pre>\n<h3 id=\"初始化blog\"><a href=\"#初始化blog\" class=\"headerlink\" title=\"初始化blog\"></a>初始化blog</h3><pre><code class=\"bash\">hexo init blog\n</code></pre>\n<p>至此，本地blog已经创建完成，是不是很简单，简单到没朋友</p>\n<h3 id=\"选择主题\"><a href=\"#选择主题\" class=\"headerlink\" title=\"选择主题\"></a>选择主题</h3><p>可以在<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">hexo官网</a>查看自己喜欢的主题<br>通过git clone [url] themes/xxx 将主题克隆到本地，<br>修改 <code>_config.yml</code> 中的theme：xxx</p>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><pre><code class=\"bash\">#创建一个新的文章\n$ hexo new &quot;文章名&quot;\n\n#生成静态文件\n$ hexo generate\n\n#将一个草稿发布出去\n$ hexo publish [layout] &lt;filename&gt;\n\n#启动一个本地服务器\n$ hexo server\n</code></pre>\n<p>更多命令移步<a href=\"https://hexo.io/docs/commands.html\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<h3 id=\"搭建github-pages\"><a href=\"#搭建github-pages\" class=\"headerlink\" title=\"搭建github pages\"></a>搭建github pages</h3><p>本地blog已经搭建完成，现在可以发布到github pages上</p>\n<h4 id=\"注册github账户\"><a href=\"#注册github账户\" class=\"headerlink\" title=\"注册github账户\"></a>注册github账户</h4><p>到<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">github官网</a>注册一个github账户</p>\n<h4 id=\"配置登录免密码\"><a href=\"#配置登录免密码\" class=\"headerlink\" title=\"配置登录免密码\"></a>配置登录免密码</h4><p>移步 </p>\n<h4 id=\"创建github远程仓库\"><a href=\"#创建github远程仓库\" class=\"headerlink\" title=\"创建github远程仓库\"></a>创建github远程仓库</h4><p>在github上创建一个仓库 <code>xxx.github.io</code> xxx为自己的github用户名</p>\n<h4 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h4><pre><code class=\"bash\">$ npm install hexo-deployer-git --save\n</code></pre>\n<h4 id=\"配置Hexo\"><a href=\"#配置Hexo\" class=\"headerlink\" title=\"配置Hexo\"></a>配置Hexo</h4><p>修改 <code>_comfig.yml</code>,xxx为你的用户名</p>\n<pre><code class=\"xml\">deploy:\n   type: git\n   repo: git@github.com:xxx/xxx.github.io.git\n   branch: master\n</code></pre>\n<h4 id=\"推送服务器\"><a href=\"#推送服务器\" class=\"headerlink\" title=\"推送服务器\"></a>推送服务器</h4><pre><code class=\"bash\">$ hexo deploy\n</code></pre>\n<blockquote>\n<p>若出现<code>ERROR Deployer not found: git</code>报错，请执行上面安装插件步骤</p>\n</blockquote>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p>打开 <code>xxx.github.io</code> ，就能看到你的blog了</p>\n","site":{"data":{}},"excerpt":"<p>Hexo是一个快速，简单，功能强大的开源博客框架-》<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">官网</a><br>GitHub Pages 是一个不受限的网站空间。<br>两者相得益彰。给那些喜欢自己折腾的人提供一些借鉴。<br>","more":"</p>\n<h2 id=\"搭建过程\"><a href=\"#搭建过程\" class=\"headerlink\" title=\"搭建过程\"></a>搭建过程</h2><h3 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h3><p>博主使用系统：Ubuntu 14.04<br>安装 node与npm</p>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><pre><code class=\"bash\">npm install hexo-cli -g\n</code></pre>\n<h3 id=\"初始化blog\"><a href=\"#初始化blog\" class=\"headerlink\" title=\"初始化blog\"></a>初始化blog</h3><pre><code class=\"bash\">hexo init blog\n</code></pre>\n<p>至此，本地blog已经创建完成，是不是很简单，简单到没朋友</p>\n<h3 id=\"选择主题\"><a href=\"#选择主题\" class=\"headerlink\" title=\"选择主题\"></a>选择主题</h3><p>可以在<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">hexo官网</a>查看自己喜欢的主题<br>通过git clone [url] themes/xxx 将主题克隆到本地，<br>修改 <code>_config.yml</code> 中的theme：xxx</p>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><pre><code class=\"bash\">#创建一个新的文章\n$ hexo new &quot;文章名&quot;\n\n#生成静态文件\n$ hexo generate\n\n#将一个草稿发布出去\n$ hexo publish [layout] &lt;filename&gt;\n\n#启动一个本地服务器\n$ hexo server\n</code></pre>\n<p>更多命令移步<a href=\"https://hexo.io/docs/commands.html\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<h3 id=\"搭建github-pages\"><a href=\"#搭建github-pages\" class=\"headerlink\" title=\"搭建github pages\"></a>搭建github pages</h3><p>本地blog已经搭建完成，现在可以发布到github pages上</p>\n<h4 id=\"注册github账户\"><a href=\"#注册github账户\" class=\"headerlink\" title=\"注册github账户\"></a>注册github账户</h4><p>到<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">github官网</a>注册一个github账户</p>\n<h4 id=\"配置登录免密码\"><a href=\"#配置登录免密码\" class=\"headerlink\" title=\"配置登录免密码\"></a>配置登录免密码</h4><p>移步 </p>\n<h4 id=\"创建github远程仓库\"><a href=\"#创建github远程仓库\" class=\"headerlink\" title=\"创建github远程仓库\"></a>创建github远程仓库</h4><p>在github上创建一个仓库 <code>xxx.github.io</code> xxx为自己的github用户名</p>\n<h4 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h4><pre><code class=\"bash\">$ npm install hexo-deployer-git --save\n</code></pre>\n<h4 id=\"配置Hexo\"><a href=\"#配置Hexo\" class=\"headerlink\" title=\"配置Hexo\"></a>配置Hexo</h4><p>修改 <code>_comfig.yml</code>,xxx为你的用户名</p>\n<pre><code class=\"xml\">deploy:\n   type: git\n   repo: git@github.com:xxx/xxx.github.io.git\n   branch: master\n</code></pre>\n<h4 id=\"推送服务器\"><a href=\"#推送服务器\" class=\"headerlink\" title=\"推送服务器\"></a>推送服务器</h4><pre><code class=\"bash\">$ hexo deploy\n</code></pre>\n<blockquote>\n<p>若出现<code>ERROR Deployer not found: git</code>报错，请执行上面安装插件步骤</p>\n</blockquote>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p>打开 <code>xxx.github.io</code> ，就能看到你的blog了</p>"},{"title":"跨进程通讯的4种方式","date":"2015-08-10T14:45:19.000Z","_content":"\n## 方式一：访问其他应用程序的Activity\n\n在android系统中有很多应用程序提供了可以跨进程访问的Activity，例如，下面的代码可以直接调用拨打电话的Activity。\nIntent callIntent = new Intent(Intent.ACTION_CALL, Uri.parse(\"tel:12345678\" );\nstartActivity(callIntent);\n\nandroid:exported：\n\ndefault value的值是根据是否有<intent-filter>来决定的，有的话，默认值就是true，没有的话默认值就是false；\n\n如果被设置为了false，那么这个Activity将只会被当前Application或者拥有同样user ID的Application的组件调用。\n\n## 方式二：Content Provider\n使用文件或数据库SqlLite来存储数据\n\n## 方式三：广播（Broadcast）\n## 方式四：AIDL服务\nAIDL 并不需要权限\n","source":"_posts/Android/跨进程通讯的4种方式.md","raw":"---\ntitle: 跨进程通讯的4种方式\npermalink: access-across-processes\ncategories:\n  - Android\ntags:\n  - android\n  - 面试\ndate: 2015-08-10 22:45:19\n---\n\n## 方式一：访问其他应用程序的Activity\n\n在android系统中有很多应用程序提供了可以跨进程访问的Activity，例如，下面的代码可以直接调用拨打电话的Activity。\nIntent callIntent = new Intent(Intent.ACTION_CALL, Uri.parse(\"tel:12345678\" );\nstartActivity(callIntent);\n\nandroid:exported：\n\ndefault value的值是根据是否有<intent-filter>来决定的，有的话，默认值就是true，没有的话默认值就是false；\n\n如果被设置为了false，那么这个Activity将只会被当前Application或者拥有同样user ID的Application的组件调用。\n\n## 方式二：Content Provider\n使用文件或数据库SqlLite来存储数据\n\n## 方式三：广播（Broadcast）\n## 方式四：AIDL服务\nAIDL 并不需要权限\n","slug":"access-across-processes","published":1,"updated":"2018-01-15T14:49:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcq91w0o0009zc8frix7bzwk","content":"<h2 id=\"方式一：访问其他应用程序的Activity\"><a href=\"#方式一：访问其他应用程序的Activity\" class=\"headerlink\" title=\"方式一：访问其他应用程序的Activity\"></a>方式一：访问其他应用程序的Activity</h2><p>在android系统中有很多应用程序提供了可以跨进程访问的Activity，例如，下面的代码可以直接调用拨打电话的Activity。<br>Intent callIntent = new Intent(Intent.ACTION_CALL, Uri.parse(“tel:12345678” );<br>startActivity(callIntent);</p>\n<p>android:exported：</p>\n<p>default value的值是根据是否有<intent-filter>来决定的，有的话，默认值就是true，没有的话默认值就是false；</intent-filter></p>\n<p>如果被设置为了false，那么这个Activity将只会被当前Application或者拥有同样user ID的Application的组件调用。</p>\n<h2 id=\"方式二：Content-Provider\"><a href=\"#方式二：Content-Provider\" class=\"headerlink\" title=\"方式二：Content Provider\"></a>方式二：Content Provider</h2><p>使用文件或数据库SqlLite来存储数据</p>\n<h2 id=\"方式三：广播（Broadcast）\"><a href=\"#方式三：广播（Broadcast）\" class=\"headerlink\" title=\"方式三：广播（Broadcast）\"></a>方式三：广播（Broadcast）</h2><h2 id=\"方式四：AIDL服务\"><a href=\"#方式四：AIDL服务\" class=\"headerlink\" title=\"方式四：AIDL服务\"></a>方式四：AIDL服务</h2><p>AIDL 并不需要权限</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"方式一：访问其他应用程序的Activity\"><a href=\"#方式一：访问其他应用程序的Activity\" class=\"headerlink\" title=\"方式一：访问其他应用程序的Activity\"></a>方式一：访问其他应用程序的Activity</h2><p>在android系统中有很多应用程序提供了可以跨进程访问的Activity，例如，下面的代码可以直接调用拨打电话的Activity。<br>Intent callIntent = new Intent(Intent.ACTION_CALL, Uri.parse(“tel:12345678” );<br>startActivity(callIntent);</p>\n<p>android:exported：</p>\n<p>default value的值是根据是否有<intent-filter>来决定的，有的话，默认值就是true，没有的话默认值就是false；</intent-filter></p>\n<p>如果被设置为了false，那么这个Activity将只会被当前Application或者拥有同样user ID的Application的组件调用。</p>\n<h2 id=\"方式二：Content-Provider\"><a href=\"#方式二：Content-Provider\" class=\"headerlink\" title=\"方式二：Content Provider\"></a>方式二：Content Provider</h2><p>使用文件或数据库SqlLite来存储数据</p>\n<h2 id=\"方式三：广播（Broadcast）\"><a href=\"#方式三：广播（Broadcast）\" class=\"headerlink\" title=\"方式三：广播（Broadcast）\"></a>方式三：广播（Broadcast）</h2><h2 id=\"方式四：AIDL服务\"><a href=\"#方式四：AIDL服务\" class=\"headerlink\" title=\"方式四：AIDL服务\"></a>方式四：AIDL服务</h2><p>AIDL 并不需要权限</p>\n"},{"title":"001-Food politics in America","date":"2018-01-22T13:14:37.000Z","_content":"\n美国的食品政策\n\nHow to wage war against “Big Soda”\n如何发动对“软饮料”的战争\n\nSoda Politics: Taking on Big Soda (and Winning). By Marion Nestle. Oxford University Press; 508 pages; $29.95 and £19.99.\n软饮料策略：对付软饮料（然后取得胜利）。作者马里昂•奈斯特。牛津大学出版社。508页。29.95美元，19.99英镑。\n\nMARION NESTLE’S heavyweight polemic against Coca-Cola and PepsiCo comes at an odd moment for the industry. Americans are drinking fewer sugary sodas—in 2012 production was 23% below what it had been a decade earlier. Even sales of diet drinks are losing their fizz, as consumers question the merits of artificial sweeteners. From one angle, it would seem that health advocates such as Ms Nestle have won. Yet in America companies still produce 30 gallons of regular (not diet) fizzy drinks per person per year. In many countries, particularly developing ones, consumption is on the rise.\n软饮料工业正处不尴不尬之际，马里昂•奈斯特对口可口可乐以及百事可乐的抨击颇具影响力。越来越少的美国人选择饮用含糖碳酸饮料----与十年前相比，2012年含糖碳酸饮料的生产减少了23%。人们甚至也失去了对膳食饮料的亲睐，因为消费者们对饮料中是否添加人工甜味剂提出了质疑。从某个角度来看，像奈斯特女士这样的健康倡导者似乎赢得了胜利。然而，美国软饮料公司每年生产的常规碳酸饮料（而非膳食饮料）人均多达30加仑。在许多国家，尤其是发展中国家，常规碳酸饮料的消费仍呈上涨趋势。\n\n\nMs Nestle, a professor at New York University, is both heartened by recent progress and dissatisfied with it. That is no surprise. Her first book, “Food Politics” (2002), remains a bible for those who bewail the power of food companies. In her new book she attacks the industry’s most widely consumed, least healthy product. “Soda Politics”, she says, is a book “to inspire readers to action”. As a rallying cry, it is verbose. When readers learn on page 238 that she will pick up a particular subject in chapter 25, it is with no little dismay that they realise they are only on chapter 17. But what the author wants most is to craft a meticulous guide to the producers’ alleged transgressions, and how to stop them.\n对于最近取得的进展，奈斯特女士，这位纽约大学的教授颇受鼓舞，但并不满足于此。这也不足为奇。她的第一本书“粮食政策”依旧被那些哀叹食品企业权势的人们奉为经典。在新书中，奈斯特女士对软饮料行业消费最广，最有害健康的产品进行了抨击。《软饮料策略》这本书旨在激励人们采取行动，奈斯特说到。然而作为战斗口号，却显得颇为繁冗。读者们在第238页了解到奈斯特将在第25章讲述一个特别的主题，却意识到自己才看到第17章，但他们并没有因此而沮丧。作者最想做的是拟定一份详细的指南，指出生产商曾经的过失，并想方设法阻止他们的这种行为。\n\n\nMs Nestle says she would have no quibbles with sweet fizzy drinks if they were sipped occasionally, as a treat. However, for millions of people in many countries, they are not. In Mexico companies sold 372 cans of fizzy drinks per person in 2012. About half of Americans do not drink them regularly, but those who do are disproportionately poor, less educated, male, Hispanic or black. Ten per cent of Americans down more than four cans a day.\n奈斯特说如果人们只是在吃饭招待的时候偶尔饮用加了甜味剂的碳酸饮料，她不会提出异议。但实际上许多国家，成千上万的人们都在喝这种饮料。2012年，仅墨西哥人均消费的碳酸饮料就高达372罐。大约一半的美国人不会经常性地饮用碳酸饮料，但是那些选择碳酸饮料的人多半是些穷困潦倒，未接受良好教育的西班牙或者黑人男性。百分之十的美国人平均每天要喝掉至少4罐碳酸饮料。\n\n\nDrinking a lot of sweet fizzy drinks is plainly unhealthy. Unlike a Big Mac, they have no nutritional value; nor do their calories satisfy hunger. One large study found that for each can added to a person’s daily diet, the risk of diabetes jumped by 22%. There are also links between sugar and heart disease, stroke and cancer. Drinking lots of sodas imposes clear costs on individuals, Ms Nestle argues, but it has a broader cost, too. American taxpayers subsidise corn production (and thereby corn syrup) and let the poor use government food vouchers to buy fizzy drinks. More important, taxpayers foot the health bill for those who develop chronic disease.\n很显然，过度饮用碳酸饮料对身体健康是有害的。与巨无霸不同的是，这些碳酸饮料毫无营养价值，它们产生的热量也无法抵抗饥饿。一项大型研究表明，如果在日常饮食中加入碳酸饮料，那么人们罹患糖尿病的风险就会增加22%。心脏病，中风以及癌症与过多的糖分摄入不无关系。奈斯特说，大量饮用碳酸饮料会增加个人开支，但实际上个人花费要远大于此。美国的纳税人为玉米生产做出了贡献（也就是为玉米糖浆的生产做出了贡献），同时，他们让穷人用政府提供的食品券来购买碳酸饮料。更重要的是，纳税人为那些罹患慢性疾病的人支付医疗帐单。\n\n\nEncouraging people to drink fewer fizzy drinks, however, is fiendishly difficult. Soda companies spend billions on marketing; it is a tribute to the admen that Coca-Cola is one of the world’s best-loved brands, despite selling what is essentially fattening sugar-water. (Think of Coca-Cola’s encouragements to “open happiness” and PepsiCo’s exuberant spokeswoman, Beyoncé Knowles.) Once people get used to consuming sugary drinks, they are loth to give them up. There is evidence suggesting that sugar is addictive—some laboratory animals prefer sugar to cocaine.\n然而，鼓励人们尽量少喝碳酸饮料却出奇的难。碳酸饮料企业在营销上花费巨资。尽管可口可乐售卖的实际上是令人增肥的糖水饮料，但可口可乐无疑是世界上最受消费者青睐的品牌之一。而这对于广告人而言，是件可喜可贺的事情。（想想可口可乐颇具鼓动性的广告语“开启幸福”，百事可乐活力四射的代言人碧昂丝•诺利斯。）人们一旦习惯了消费含糖饮料，便很难戒掉。有证据表明食糖是会上瘾的----与可卡因相比，实验室的动物们更喜欢食糖。\n\n\nMost interesting, fizzy-drink companies are skilled at swatting away attempts at regulation. Ms Nestle describes an extraordinarily broad team of allies. That includes obvious friends, such as employees, bottlers and distributors, as well as the restaurants, cinemas, shops and sports stadiums that sell their products. But the companies are also astute philanthropists. When Michael Bloomberg, then mayor of New York, tried to block the use of government vouchers to buy sodas in 2010, the congressional black caucus was among those to lobby against it. The caucus’s foundation has received money from both Coke and Pepsi. In 2011 Philadelphia was considering a soda tax. After the soda lobby offered a big donation to the city’s children’s hospital, the idea fizzled out.\n更有趣的是，碳酸饮料企业对规避规范化的尝试颇有一套。奈斯特将其描述为一个非比寻常的庞大联盟。很显然，这个联盟包括了这些企业的盟友们，比如雇员，瓶装工，经销商，那些出售他们商品的饭店，电影院，商店以及体育场。但这些碳酸饮料企业同时也是非常精明的慈善家。2010年，当时的纽约市市长迈克尔•布隆伯格试图阻止人们用政府代金券购买碳酸饮料，但却遭到了包括美国国会黑人同盟在内的多数人的反对。2011年，费城考虑是否要征收碳酸饮料税，但在碳酸饮料游说集团出资捐助了一家当地的儿童医院之后，这项提议未能实施。\n\n\nCoca-Cola and PepsiCo do have a few notable adversaries. Mr Bloomberg, a billionaire, remains their single biggest foe. It is telling that in two rare instances when a soda tax has been passed—in Berkeley, California and in Mexico—it was with the help of cash from Mr Bloomberg. Drinks companies must also reckon with a small army of health advocates, among which Ms Nestle is a major-general.\n可口可乐和百事可乐确实有一些颇为出名的对手。布隆伯格，这位亿万富翁是他们最大的对手。据说在两个颇为罕见的通过征收碳酸饮料税的例子中----一个是加利福尼亚的伯克利市，另一个是墨西哥----都是在布隆伯格的资金帮助下通过了碳酸饮料税法案。饮料公司还得去对付那些以奈斯特为首的健康军团。\n\n\nWith the slow decline of soda in America, she and her allies are advancing. Coca-Cola and PepsiCo are peddling healthier drinks, such as bottled water. However, as they try to face down a long-term threat while maintaining near-term profits, they are still pushing their syrupy fare.\n随着美国人慢慢地拒绝碳酸饮料，奈斯特和她的盟友们正向成功一步步迈进。可口可乐和百事可乐正忙于推销更健康的饮料，如瓶装水。然而，他们仍旧努力推动碳酸饮料事业的发展，试图在维持短期利润的同时，努力克服长期以来的威胁。\n\n\nMs Nestle is impatient. To the casual reader, her suggestions can seem extreme. She writes enthusiastically about adorning soda cans with warning labels, such as pictures of a diabetic’s foot ulcer. She suggests that parents should teach their children about fizzy drinks by gently boiling down a Coke or a Pepsi into sludge, which sounds rather fun, and asking them to calculate the precise length of grocery shelves bearing sodas, which sounds less so. This zeal threatens to overshadow her stronger points: fizzy drinks offer no nutritional benefit and impose clear costs—on individuals’ health and on society.\n奈斯特女士可没那么好的耐心。对于一般的读者，她给的建议似乎很极端。在书中她强烈建议碳酸饮料瓶上面必须贴有糖尿病患者脚部溃烂诸如此类的警示标志。她建议父母们在向孩子们介绍碳酸饮料时，将可口可乐和百事可乐说成是垃圾，这看上去颇为有趣，并要求孩子们去算算杂货店摆满碳酸饮料的货架究竟有多长，这听上去似乎没那么好笑了。这份热情让斯耐特关于碳酸饮料的观点显得不那么重要了：碳酸饮料没有任何营养价值，对个人的健康没有好处，而且还增加了社会的负担。\n","source":"_posts/英语/Food-politics-in-America.md","raw":"---\ntitle: 001-Food politics in America\npermalink: food-politics-in-America\ncategories:\n  - 英语\ntags:\n  - english\ndate: 2018-01-22 21:14:37\n---\n\n美国的食品政策\n\nHow to wage war against “Big Soda”\n如何发动对“软饮料”的战争\n\nSoda Politics: Taking on Big Soda (and Winning). By Marion Nestle. Oxford University Press; 508 pages; $29.95 and £19.99.\n软饮料策略：对付软饮料（然后取得胜利）。作者马里昂•奈斯特。牛津大学出版社。508页。29.95美元，19.99英镑。\n\nMARION NESTLE’S heavyweight polemic against Coca-Cola and PepsiCo comes at an odd moment for the industry. Americans are drinking fewer sugary sodas—in 2012 production was 23% below what it had been a decade earlier. Even sales of diet drinks are losing their fizz, as consumers question the merits of artificial sweeteners. From one angle, it would seem that health advocates such as Ms Nestle have won. Yet in America companies still produce 30 gallons of regular (not diet) fizzy drinks per person per year. In many countries, particularly developing ones, consumption is on the rise.\n软饮料工业正处不尴不尬之际，马里昂•奈斯特对口可口可乐以及百事可乐的抨击颇具影响力。越来越少的美国人选择饮用含糖碳酸饮料----与十年前相比，2012年含糖碳酸饮料的生产减少了23%。人们甚至也失去了对膳食饮料的亲睐，因为消费者们对饮料中是否添加人工甜味剂提出了质疑。从某个角度来看，像奈斯特女士这样的健康倡导者似乎赢得了胜利。然而，美国软饮料公司每年生产的常规碳酸饮料（而非膳食饮料）人均多达30加仑。在许多国家，尤其是发展中国家，常规碳酸饮料的消费仍呈上涨趋势。\n\n\nMs Nestle, a professor at New York University, is both heartened by recent progress and dissatisfied with it. That is no surprise. Her first book, “Food Politics” (2002), remains a bible for those who bewail the power of food companies. In her new book she attacks the industry’s most widely consumed, least healthy product. “Soda Politics”, she says, is a book “to inspire readers to action”. As a rallying cry, it is verbose. When readers learn on page 238 that she will pick up a particular subject in chapter 25, it is with no little dismay that they realise they are only on chapter 17. But what the author wants most is to craft a meticulous guide to the producers’ alleged transgressions, and how to stop them.\n对于最近取得的进展，奈斯特女士，这位纽约大学的教授颇受鼓舞，但并不满足于此。这也不足为奇。她的第一本书“粮食政策”依旧被那些哀叹食品企业权势的人们奉为经典。在新书中，奈斯特女士对软饮料行业消费最广，最有害健康的产品进行了抨击。《软饮料策略》这本书旨在激励人们采取行动，奈斯特说到。然而作为战斗口号，却显得颇为繁冗。读者们在第238页了解到奈斯特将在第25章讲述一个特别的主题，却意识到自己才看到第17章，但他们并没有因此而沮丧。作者最想做的是拟定一份详细的指南，指出生产商曾经的过失，并想方设法阻止他们的这种行为。\n\n\nMs Nestle says she would have no quibbles with sweet fizzy drinks if they were sipped occasionally, as a treat. However, for millions of people in many countries, they are not. In Mexico companies sold 372 cans of fizzy drinks per person in 2012. About half of Americans do not drink them regularly, but those who do are disproportionately poor, less educated, male, Hispanic or black. Ten per cent of Americans down more than four cans a day.\n奈斯特说如果人们只是在吃饭招待的时候偶尔饮用加了甜味剂的碳酸饮料，她不会提出异议。但实际上许多国家，成千上万的人们都在喝这种饮料。2012年，仅墨西哥人均消费的碳酸饮料就高达372罐。大约一半的美国人不会经常性地饮用碳酸饮料，但是那些选择碳酸饮料的人多半是些穷困潦倒，未接受良好教育的西班牙或者黑人男性。百分之十的美国人平均每天要喝掉至少4罐碳酸饮料。\n\n\nDrinking a lot of sweet fizzy drinks is plainly unhealthy. Unlike a Big Mac, they have no nutritional value; nor do their calories satisfy hunger. One large study found that for each can added to a person’s daily diet, the risk of diabetes jumped by 22%. There are also links between sugar and heart disease, stroke and cancer. Drinking lots of sodas imposes clear costs on individuals, Ms Nestle argues, but it has a broader cost, too. American taxpayers subsidise corn production (and thereby corn syrup) and let the poor use government food vouchers to buy fizzy drinks. More important, taxpayers foot the health bill for those who develop chronic disease.\n很显然，过度饮用碳酸饮料对身体健康是有害的。与巨无霸不同的是，这些碳酸饮料毫无营养价值，它们产生的热量也无法抵抗饥饿。一项大型研究表明，如果在日常饮食中加入碳酸饮料，那么人们罹患糖尿病的风险就会增加22%。心脏病，中风以及癌症与过多的糖分摄入不无关系。奈斯特说，大量饮用碳酸饮料会增加个人开支，但实际上个人花费要远大于此。美国的纳税人为玉米生产做出了贡献（也就是为玉米糖浆的生产做出了贡献），同时，他们让穷人用政府提供的食品券来购买碳酸饮料。更重要的是，纳税人为那些罹患慢性疾病的人支付医疗帐单。\n\n\nEncouraging people to drink fewer fizzy drinks, however, is fiendishly difficult. Soda companies spend billions on marketing; it is a tribute to the admen that Coca-Cola is one of the world’s best-loved brands, despite selling what is essentially fattening sugar-water. (Think of Coca-Cola’s encouragements to “open happiness” and PepsiCo’s exuberant spokeswoman, Beyoncé Knowles.) Once people get used to consuming sugary drinks, they are loth to give them up. There is evidence suggesting that sugar is addictive—some laboratory animals prefer sugar to cocaine.\n然而，鼓励人们尽量少喝碳酸饮料却出奇的难。碳酸饮料企业在营销上花费巨资。尽管可口可乐售卖的实际上是令人增肥的糖水饮料，但可口可乐无疑是世界上最受消费者青睐的品牌之一。而这对于广告人而言，是件可喜可贺的事情。（想想可口可乐颇具鼓动性的广告语“开启幸福”，百事可乐活力四射的代言人碧昂丝•诺利斯。）人们一旦习惯了消费含糖饮料，便很难戒掉。有证据表明食糖是会上瘾的----与可卡因相比，实验室的动物们更喜欢食糖。\n\n\nMost interesting, fizzy-drink companies are skilled at swatting away attempts at regulation. Ms Nestle describes an extraordinarily broad team of allies. That includes obvious friends, such as employees, bottlers and distributors, as well as the restaurants, cinemas, shops and sports stadiums that sell their products. But the companies are also astute philanthropists. When Michael Bloomberg, then mayor of New York, tried to block the use of government vouchers to buy sodas in 2010, the congressional black caucus was among those to lobby against it. The caucus’s foundation has received money from both Coke and Pepsi. In 2011 Philadelphia was considering a soda tax. After the soda lobby offered a big donation to the city’s children’s hospital, the idea fizzled out.\n更有趣的是，碳酸饮料企业对规避规范化的尝试颇有一套。奈斯特将其描述为一个非比寻常的庞大联盟。很显然，这个联盟包括了这些企业的盟友们，比如雇员，瓶装工，经销商，那些出售他们商品的饭店，电影院，商店以及体育场。但这些碳酸饮料企业同时也是非常精明的慈善家。2010年，当时的纽约市市长迈克尔•布隆伯格试图阻止人们用政府代金券购买碳酸饮料，但却遭到了包括美国国会黑人同盟在内的多数人的反对。2011年，费城考虑是否要征收碳酸饮料税，但在碳酸饮料游说集团出资捐助了一家当地的儿童医院之后，这项提议未能实施。\n\n\nCoca-Cola and PepsiCo do have a few notable adversaries. Mr Bloomberg, a billionaire, remains their single biggest foe. It is telling that in two rare instances when a soda tax has been passed—in Berkeley, California and in Mexico—it was with the help of cash from Mr Bloomberg. Drinks companies must also reckon with a small army of health advocates, among which Ms Nestle is a major-general.\n可口可乐和百事可乐确实有一些颇为出名的对手。布隆伯格，这位亿万富翁是他们最大的对手。据说在两个颇为罕见的通过征收碳酸饮料税的例子中----一个是加利福尼亚的伯克利市，另一个是墨西哥----都是在布隆伯格的资金帮助下通过了碳酸饮料税法案。饮料公司还得去对付那些以奈斯特为首的健康军团。\n\n\nWith the slow decline of soda in America, she and her allies are advancing. Coca-Cola and PepsiCo are peddling healthier drinks, such as bottled water. However, as they try to face down a long-term threat while maintaining near-term profits, they are still pushing their syrupy fare.\n随着美国人慢慢地拒绝碳酸饮料，奈斯特和她的盟友们正向成功一步步迈进。可口可乐和百事可乐正忙于推销更健康的饮料，如瓶装水。然而，他们仍旧努力推动碳酸饮料事业的发展，试图在维持短期利润的同时，努力克服长期以来的威胁。\n\n\nMs Nestle is impatient. To the casual reader, her suggestions can seem extreme. She writes enthusiastically about adorning soda cans with warning labels, such as pictures of a diabetic’s foot ulcer. She suggests that parents should teach their children about fizzy drinks by gently boiling down a Coke or a Pepsi into sludge, which sounds rather fun, and asking them to calculate the precise length of grocery shelves bearing sodas, which sounds less so. This zeal threatens to overshadow her stronger points: fizzy drinks offer no nutritional benefit and impose clear costs—on individuals’ health and on society.\n奈斯特女士可没那么好的耐心。对于一般的读者，她给的建议似乎很极端。在书中她强烈建议碳酸饮料瓶上面必须贴有糖尿病患者脚部溃烂诸如此类的警示标志。她建议父母们在向孩子们介绍碳酸饮料时，将可口可乐和百事可乐说成是垃圾，这看上去颇为有趣，并要求孩子们去算算杂货店摆满碳酸饮料的货架究竟有多长，这听上去似乎没那么好笑了。这份热情让斯耐特关于碳酸饮料的观点显得不那么重要了：碳酸饮料没有任何营养价值，对个人的健康没有好处，而且还增加了社会的负担。\n","slug":"food-politics-in-America","published":1,"updated":"2018-01-22T13:29:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcq91w0q000azc8fm9aojo90","content":"<p>美国的食品政策</p>\n<p>How to wage war against “Big Soda”<br>如何发动对“软饮料”的战争</p>\n<p>Soda Politics: Taking on Big Soda (and Winning). By Marion Nestle. Oxford University Press; 508 pages; $29.95 and £19.99.<br>软饮料策略：对付软饮料（然后取得胜利）。作者马里昂•奈斯特。牛津大学出版社。508页。29.95美元，19.99英镑。</p>\n<p>MARION NESTLE’S heavyweight polemic against Coca-Cola and PepsiCo comes at an odd moment for the industry. Americans are drinking fewer sugary sodas—in 2012 production was 23% below what it had been a decade earlier. Even sales of diet drinks are losing their fizz, as consumers question the merits of artificial sweeteners. From one angle, it would seem that health advocates such as Ms Nestle have won. Yet in America companies still produce 30 gallons of regular (not diet) fizzy drinks per person per year. In many countries, particularly developing ones, consumption is on the rise.<br>软饮料工业正处不尴不尬之际，马里昂•奈斯特对口可口可乐以及百事可乐的抨击颇具影响力。越来越少的美国人选择饮用含糖碳酸饮料—-与十年前相比，2012年含糖碳酸饮料的生产减少了23%。人们甚至也失去了对膳食饮料的亲睐，因为消费者们对饮料中是否添加人工甜味剂提出了质疑。从某个角度来看，像奈斯特女士这样的健康倡导者似乎赢得了胜利。然而，美国软饮料公司每年生产的常规碳酸饮料（而非膳食饮料）人均多达30加仑。在许多国家，尤其是发展中国家，常规碳酸饮料的消费仍呈上涨趋势。</p>\n<p>Ms Nestle, a professor at New York University, is both heartened by recent progress and dissatisfied with it. That is no surprise. Her first book, “Food Politics” (2002), remains a bible for those who bewail the power of food companies. In her new book she attacks the industry’s most widely consumed, least healthy product. “Soda Politics”, she says, is a book “to inspire readers to action”. As a rallying cry, it is verbose. When readers learn on page 238 that she will pick up a particular subject in chapter 25, it is with no little dismay that they realise they are only on chapter 17. But what the author wants most is to craft a meticulous guide to the producers’ alleged transgressions, and how to stop them.<br>对于最近取得的进展，奈斯特女士，这位纽约大学的教授颇受鼓舞，但并不满足于此。这也不足为奇。她的第一本书“粮食政策”依旧被那些哀叹食品企业权势的人们奉为经典。在新书中，奈斯特女士对软饮料行业消费最广，最有害健康的产品进行了抨击。《软饮料策略》这本书旨在激励人们采取行动，奈斯特说到。然而作为战斗口号，却显得颇为繁冗。读者们在第238页了解到奈斯特将在第25章讲述一个特别的主题，却意识到自己才看到第17章，但他们并没有因此而沮丧。作者最想做的是拟定一份详细的指南，指出生产商曾经的过失，并想方设法阻止他们的这种行为。</p>\n<p>Ms Nestle says she would have no quibbles with sweet fizzy drinks if they were sipped occasionally, as a treat. However, for millions of people in many countries, they are not. In Mexico companies sold 372 cans of fizzy drinks per person in 2012. About half of Americans do not drink them regularly, but those who do are disproportionately poor, less educated, male, Hispanic or black. Ten per cent of Americans down more than four cans a day.<br>奈斯特说如果人们只是在吃饭招待的时候偶尔饮用加了甜味剂的碳酸饮料，她不会提出异议。但实际上许多国家，成千上万的人们都在喝这种饮料。2012年，仅墨西哥人均消费的碳酸饮料就高达372罐。大约一半的美国人不会经常性地饮用碳酸饮料，但是那些选择碳酸饮料的人多半是些穷困潦倒，未接受良好教育的西班牙或者黑人男性。百分之十的美国人平均每天要喝掉至少4罐碳酸饮料。</p>\n<p>Drinking a lot of sweet fizzy drinks is plainly unhealthy. Unlike a Big Mac, they have no nutritional value; nor do their calories satisfy hunger. One large study found that for each can added to a person’s daily diet, the risk of diabetes jumped by 22%. There are also links between sugar and heart disease, stroke and cancer. Drinking lots of sodas imposes clear costs on individuals, Ms Nestle argues, but it has a broader cost, too. American taxpayers subsidise corn production (and thereby corn syrup) and let the poor use government food vouchers to buy fizzy drinks. More important, taxpayers foot the health bill for those who develop chronic disease.<br>很显然，过度饮用碳酸饮料对身体健康是有害的。与巨无霸不同的是，这些碳酸饮料毫无营养价值，它们产生的热量也无法抵抗饥饿。一项大型研究表明，如果在日常饮食中加入碳酸饮料，那么人们罹患糖尿病的风险就会增加22%。心脏病，中风以及癌症与过多的糖分摄入不无关系。奈斯特说，大量饮用碳酸饮料会增加个人开支，但实际上个人花费要远大于此。美国的纳税人为玉米生产做出了贡献（也就是为玉米糖浆的生产做出了贡献），同时，他们让穷人用政府提供的食品券来购买碳酸饮料。更重要的是，纳税人为那些罹患慢性疾病的人支付医疗帐单。</p>\n<p>Encouraging people to drink fewer fizzy drinks, however, is fiendishly difficult. Soda companies spend billions on marketing; it is a tribute to the admen that Coca-Cola is one of the world’s best-loved brands, despite selling what is essentially fattening sugar-water. (Think of Coca-Cola’s encouragements to “open happiness” and PepsiCo’s exuberant spokeswoman, Beyoncé Knowles.) Once people get used to consuming sugary drinks, they are loth to give them up. There is evidence suggesting that sugar is addictive—some laboratory animals prefer sugar to cocaine.<br>然而，鼓励人们尽量少喝碳酸饮料却出奇的难。碳酸饮料企业在营销上花费巨资。尽管可口可乐售卖的实际上是令人增肥的糖水饮料，但可口可乐无疑是世界上最受消费者青睐的品牌之一。而这对于广告人而言，是件可喜可贺的事情。（想想可口可乐颇具鼓动性的广告语“开启幸福”，百事可乐活力四射的代言人碧昂丝•诺利斯。）人们一旦习惯了消费含糖饮料，便很难戒掉。有证据表明食糖是会上瘾的—-与可卡因相比，实验室的动物们更喜欢食糖。</p>\n<p>Most interesting, fizzy-drink companies are skilled at swatting away attempts at regulation. Ms Nestle describes an extraordinarily broad team of allies. That includes obvious friends, such as employees, bottlers and distributors, as well as the restaurants, cinemas, shops and sports stadiums that sell their products. But the companies are also astute philanthropists. When Michael Bloomberg, then mayor of New York, tried to block the use of government vouchers to buy sodas in 2010, the congressional black caucus was among those to lobby against it. The caucus’s foundation has received money from both Coke and Pepsi. In 2011 Philadelphia was considering a soda tax. After the soda lobby offered a big donation to the city’s children’s hospital, the idea fizzled out.<br>更有趣的是，碳酸饮料企业对规避规范化的尝试颇有一套。奈斯特将其描述为一个非比寻常的庞大联盟。很显然，这个联盟包括了这些企业的盟友们，比如雇员，瓶装工，经销商，那些出售他们商品的饭店，电影院，商店以及体育场。但这些碳酸饮料企业同时也是非常精明的慈善家。2010年，当时的纽约市市长迈克尔•布隆伯格试图阻止人们用政府代金券购买碳酸饮料，但却遭到了包括美国国会黑人同盟在内的多数人的反对。2011年，费城考虑是否要征收碳酸饮料税，但在碳酸饮料游说集团出资捐助了一家当地的儿童医院之后，这项提议未能实施。</p>\n<p>Coca-Cola and PepsiCo do have a few notable adversaries. Mr Bloomberg, a billionaire, remains their single biggest foe. It is telling that in two rare instances when a soda tax has been passed—in Berkeley, California and in Mexico—it was with the help of cash from Mr Bloomberg. Drinks companies must also reckon with a small army of health advocates, among which Ms Nestle is a major-general.<br>可口可乐和百事可乐确实有一些颇为出名的对手。布隆伯格，这位亿万富翁是他们最大的对手。据说在两个颇为罕见的通过征收碳酸饮料税的例子中—-一个是加利福尼亚的伯克利市，另一个是墨西哥—-都是在布隆伯格的资金帮助下通过了碳酸饮料税法案。饮料公司还得去对付那些以奈斯特为首的健康军团。</p>\n<p>With the slow decline of soda in America, she and her allies are advancing. Coca-Cola and PepsiCo are peddling healthier drinks, such as bottled water. However, as they try to face down a long-term threat while maintaining near-term profits, they are still pushing their syrupy fare.<br>随着美国人慢慢地拒绝碳酸饮料，奈斯特和她的盟友们正向成功一步步迈进。可口可乐和百事可乐正忙于推销更健康的饮料，如瓶装水。然而，他们仍旧努力推动碳酸饮料事业的发展，试图在维持短期利润的同时，努力克服长期以来的威胁。</p>\n<p>Ms Nestle is impatient. To the casual reader, her suggestions can seem extreme. She writes enthusiastically about adorning soda cans with warning labels, such as pictures of a diabetic’s foot ulcer. She suggests that parents should teach their children about fizzy drinks by gently boiling down a Coke or a Pepsi into sludge, which sounds rather fun, and asking them to calculate the precise length of grocery shelves bearing sodas, which sounds less so. This zeal threatens to overshadow her stronger points: fizzy drinks offer no nutritional benefit and impose clear costs—on individuals’ health and on society.<br>奈斯特女士可没那么好的耐心。对于一般的读者，她给的建议似乎很极端。在书中她强烈建议碳酸饮料瓶上面必须贴有糖尿病患者脚部溃烂诸如此类的警示标志。她建议父母们在向孩子们介绍碳酸饮料时，将可口可乐和百事可乐说成是垃圾，这看上去颇为有趣，并要求孩子们去算算杂货店摆满碳酸饮料的货架究竟有多长，这听上去似乎没那么好笑了。这份热情让斯耐特关于碳酸饮料的观点显得不那么重要了：碳酸饮料没有任何营养价值，对个人的健康没有好处，而且还增加了社会的负担。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>美国的食品政策</p>\n<p>How to wage war against “Big Soda”<br>如何发动对“软饮料”的战争</p>\n<p>Soda Politics: Taking on Big Soda (and Winning). By Marion Nestle. Oxford University Press; 508 pages; $29.95 and £19.99.<br>软饮料策略：对付软饮料（然后取得胜利）。作者马里昂•奈斯特。牛津大学出版社。508页。29.95美元，19.99英镑。</p>\n<p>MARION NESTLE’S heavyweight polemic against Coca-Cola and PepsiCo comes at an odd moment for the industry. Americans are drinking fewer sugary sodas—in 2012 production was 23% below what it had been a decade earlier. Even sales of diet drinks are losing their fizz, as consumers question the merits of artificial sweeteners. From one angle, it would seem that health advocates such as Ms Nestle have won. Yet in America companies still produce 30 gallons of regular (not diet) fizzy drinks per person per year. In many countries, particularly developing ones, consumption is on the rise.<br>软饮料工业正处不尴不尬之际，马里昂•奈斯特对口可口可乐以及百事可乐的抨击颇具影响力。越来越少的美国人选择饮用含糖碳酸饮料—-与十年前相比，2012年含糖碳酸饮料的生产减少了23%。人们甚至也失去了对膳食饮料的亲睐，因为消费者们对饮料中是否添加人工甜味剂提出了质疑。从某个角度来看，像奈斯特女士这样的健康倡导者似乎赢得了胜利。然而，美国软饮料公司每年生产的常规碳酸饮料（而非膳食饮料）人均多达30加仑。在许多国家，尤其是发展中国家，常规碳酸饮料的消费仍呈上涨趋势。</p>\n<p>Ms Nestle, a professor at New York University, is both heartened by recent progress and dissatisfied with it. That is no surprise. Her first book, “Food Politics” (2002), remains a bible for those who bewail the power of food companies. In her new book she attacks the industry’s most widely consumed, least healthy product. “Soda Politics”, she says, is a book “to inspire readers to action”. As a rallying cry, it is verbose. When readers learn on page 238 that she will pick up a particular subject in chapter 25, it is with no little dismay that they realise they are only on chapter 17. But what the author wants most is to craft a meticulous guide to the producers’ alleged transgressions, and how to stop them.<br>对于最近取得的进展，奈斯特女士，这位纽约大学的教授颇受鼓舞，但并不满足于此。这也不足为奇。她的第一本书“粮食政策”依旧被那些哀叹食品企业权势的人们奉为经典。在新书中，奈斯特女士对软饮料行业消费最广，最有害健康的产品进行了抨击。《软饮料策略》这本书旨在激励人们采取行动，奈斯特说到。然而作为战斗口号，却显得颇为繁冗。读者们在第238页了解到奈斯特将在第25章讲述一个特别的主题，却意识到自己才看到第17章，但他们并没有因此而沮丧。作者最想做的是拟定一份详细的指南，指出生产商曾经的过失，并想方设法阻止他们的这种行为。</p>\n<p>Ms Nestle says she would have no quibbles with sweet fizzy drinks if they were sipped occasionally, as a treat. However, for millions of people in many countries, they are not. In Mexico companies sold 372 cans of fizzy drinks per person in 2012. About half of Americans do not drink them regularly, but those who do are disproportionately poor, less educated, male, Hispanic or black. Ten per cent of Americans down more than four cans a day.<br>奈斯特说如果人们只是在吃饭招待的时候偶尔饮用加了甜味剂的碳酸饮料，她不会提出异议。但实际上许多国家，成千上万的人们都在喝这种饮料。2012年，仅墨西哥人均消费的碳酸饮料就高达372罐。大约一半的美国人不会经常性地饮用碳酸饮料，但是那些选择碳酸饮料的人多半是些穷困潦倒，未接受良好教育的西班牙或者黑人男性。百分之十的美国人平均每天要喝掉至少4罐碳酸饮料。</p>\n<p>Drinking a lot of sweet fizzy drinks is plainly unhealthy. Unlike a Big Mac, they have no nutritional value; nor do their calories satisfy hunger. One large study found that for each can added to a person’s daily diet, the risk of diabetes jumped by 22%. There are also links between sugar and heart disease, stroke and cancer. Drinking lots of sodas imposes clear costs on individuals, Ms Nestle argues, but it has a broader cost, too. American taxpayers subsidise corn production (and thereby corn syrup) and let the poor use government food vouchers to buy fizzy drinks. More important, taxpayers foot the health bill for those who develop chronic disease.<br>很显然，过度饮用碳酸饮料对身体健康是有害的。与巨无霸不同的是，这些碳酸饮料毫无营养价值，它们产生的热量也无法抵抗饥饿。一项大型研究表明，如果在日常饮食中加入碳酸饮料，那么人们罹患糖尿病的风险就会增加22%。心脏病，中风以及癌症与过多的糖分摄入不无关系。奈斯特说，大量饮用碳酸饮料会增加个人开支，但实际上个人花费要远大于此。美国的纳税人为玉米生产做出了贡献（也就是为玉米糖浆的生产做出了贡献），同时，他们让穷人用政府提供的食品券来购买碳酸饮料。更重要的是，纳税人为那些罹患慢性疾病的人支付医疗帐单。</p>\n<p>Encouraging people to drink fewer fizzy drinks, however, is fiendishly difficult. Soda companies spend billions on marketing; it is a tribute to the admen that Coca-Cola is one of the world’s best-loved brands, despite selling what is essentially fattening sugar-water. (Think of Coca-Cola’s encouragements to “open happiness” and PepsiCo’s exuberant spokeswoman, Beyoncé Knowles.) Once people get used to consuming sugary drinks, they are loth to give them up. There is evidence suggesting that sugar is addictive—some laboratory animals prefer sugar to cocaine.<br>然而，鼓励人们尽量少喝碳酸饮料却出奇的难。碳酸饮料企业在营销上花费巨资。尽管可口可乐售卖的实际上是令人增肥的糖水饮料，但可口可乐无疑是世界上最受消费者青睐的品牌之一。而这对于广告人而言，是件可喜可贺的事情。（想想可口可乐颇具鼓动性的广告语“开启幸福”，百事可乐活力四射的代言人碧昂丝•诺利斯。）人们一旦习惯了消费含糖饮料，便很难戒掉。有证据表明食糖是会上瘾的—-与可卡因相比，实验室的动物们更喜欢食糖。</p>\n<p>Most interesting, fizzy-drink companies are skilled at swatting away attempts at regulation. Ms Nestle describes an extraordinarily broad team of allies. That includes obvious friends, such as employees, bottlers and distributors, as well as the restaurants, cinemas, shops and sports stadiums that sell their products. But the companies are also astute philanthropists. When Michael Bloomberg, then mayor of New York, tried to block the use of government vouchers to buy sodas in 2010, the congressional black caucus was among those to lobby against it. The caucus’s foundation has received money from both Coke and Pepsi. In 2011 Philadelphia was considering a soda tax. After the soda lobby offered a big donation to the city’s children’s hospital, the idea fizzled out.<br>更有趣的是，碳酸饮料企业对规避规范化的尝试颇有一套。奈斯特将其描述为一个非比寻常的庞大联盟。很显然，这个联盟包括了这些企业的盟友们，比如雇员，瓶装工，经销商，那些出售他们商品的饭店，电影院，商店以及体育场。但这些碳酸饮料企业同时也是非常精明的慈善家。2010年，当时的纽约市市长迈克尔•布隆伯格试图阻止人们用政府代金券购买碳酸饮料，但却遭到了包括美国国会黑人同盟在内的多数人的反对。2011年，费城考虑是否要征收碳酸饮料税，但在碳酸饮料游说集团出资捐助了一家当地的儿童医院之后，这项提议未能实施。</p>\n<p>Coca-Cola and PepsiCo do have a few notable adversaries. Mr Bloomberg, a billionaire, remains their single biggest foe. It is telling that in two rare instances when a soda tax has been passed—in Berkeley, California and in Mexico—it was with the help of cash from Mr Bloomberg. Drinks companies must also reckon with a small army of health advocates, among which Ms Nestle is a major-general.<br>可口可乐和百事可乐确实有一些颇为出名的对手。布隆伯格，这位亿万富翁是他们最大的对手。据说在两个颇为罕见的通过征收碳酸饮料税的例子中—-一个是加利福尼亚的伯克利市，另一个是墨西哥—-都是在布隆伯格的资金帮助下通过了碳酸饮料税法案。饮料公司还得去对付那些以奈斯特为首的健康军团。</p>\n<p>With the slow decline of soda in America, she and her allies are advancing. Coca-Cola and PepsiCo are peddling healthier drinks, such as bottled water. However, as they try to face down a long-term threat while maintaining near-term profits, they are still pushing their syrupy fare.<br>随着美国人慢慢地拒绝碳酸饮料，奈斯特和她的盟友们正向成功一步步迈进。可口可乐和百事可乐正忙于推销更健康的饮料，如瓶装水。然而，他们仍旧努力推动碳酸饮料事业的发展，试图在维持短期利润的同时，努力克服长期以来的威胁。</p>\n<p>Ms Nestle is impatient. To the casual reader, her suggestions can seem extreme. She writes enthusiastically about adorning soda cans with warning labels, such as pictures of a diabetic’s foot ulcer. She suggests that parents should teach their children about fizzy drinks by gently boiling down a Coke or a Pepsi into sludge, which sounds rather fun, and asking them to calculate the precise length of grocery shelves bearing sodas, which sounds less so. This zeal threatens to overshadow her stronger points: fizzy drinks offer no nutritional benefit and impose clear costs—on individuals’ health and on society.<br>奈斯特女士可没那么好的耐心。对于一般的读者，她给的建议似乎很极端。在书中她强烈建议碳酸饮料瓶上面必须贴有糖尿病患者脚部溃烂诸如此类的警示标志。她建议父母们在向孩子们介绍碳酸饮料时，将可口可乐和百事可乐说成是垃圾，这看上去颇为有趣，并要求孩子们去算算杂货店摆满碳酸饮料的货架究竟有多长，这听上去似乎没那么好笑了。这份热情让斯耐特关于碳酸饮料的观点显得不那么重要了：碳酸饮料没有任何营养价值，对个人的健康没有好处，而且还增加了社会的负担。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjcq91w0l0005zc8fesau3g64","category_id":"cjcq91w0h0002zc8f964mi0z8","_id":"cjcq91w0r000bzc8fry96c7xy"},{"post_id":"cjcq91w0b0000zc8fhci127mo","category_id":"cjcq91w0h0002zc8f964mi0z8","_id":"cjcq91w0r000ezc8f2cxdugtr"},{"post_id":"cjcq91w0o0009zc8frix7bzwk","category_id":"cjcq91w0h0002zc8f964mi0z8","_id":"cjcq91w0s000fzc8f1d9iuqmn"},{"post_id":"cjcq91w0f0001zc8f6krdisn1","category_id":"cjcq91w0h0002zc8f964mi0z8","_id":"cjcq91w0u000izc8f17ludlaw"},{"post_id":"cjcq91w0j0004zc8fyt98sv05","category_id":"cjcq91w0h0002zc8f964mi0z8","_id":"cjcq91w0u000kzc8frrijvqtr"},{"post_id":"cjcq91w0m0006zc8fz7sp0tjq","category_id":"cjcq91w0s000gzc8fxy2dc8hk","_id":"cjcq91w0v000pzc8f0gybnkc9"},{"post_id":"cjcq91w0q000azc8fm9aojo90","category_id":"cjcq91w0u000lzc8fyq4jcbro","_id":"cjcq91w0w000rzc8fgzue2aov"}],"PostTag":[{"post_id":"cjcq91w0b0000zc8fhci127mo","tag_id":"cjcq91w0j0003zc8ffazvbbsr","_id":"cjcq91w0u000jzc8fs2vfi2ne"},{"post_id":"cjcq91w0b0000zc8fhci127mo","tag_id":"cjcq91w0n0008zc8fim1cmyvf","_id":"cjcq91w0u000mzc8f32zv67vv"},{"post_id":"cjcq91w0b0000zc8fhci127mo","tag_id":"cjcq91w0r000dzc8f8o7z0y1h","_id":"cjcq91w0v000ozc8fewiud5ih"},{"post_id":"cjcq91w0f0001zc8f6krdisn1","tag_id":"cjcq91w0j0003zc8ffazvbbsr","_id":"cjcq91w0x000tzc8folyzju0w"},{"post_id":"cjcq91w0f0001zc8f6krdisn1","tag_id":"cjcq91w0u000nzc8f56cuipaz","_id":"cjcq91w0x000uzc8fox1dseb1"},{"post_id":"cjcq91w0f0001zc8f6krdisn1","tag_id":"cjcq91w0v000qzc8fj9r2ky75","_id":"cjcq91w0x000wzc8ffw5yv93d"},{"post_id":"cjcq91w0j0004zc8fyt98sv05","tag_id":"cjcq91w0j0003zc8ffazvbbsr","_id":"cjcq91w0x000xzc8fcngwussm"},{"post_id":"cjcq91w0l0005zc8fesau3g64","tag_id":"cjcq91w0j0003zc8ffazvbbsr","_id":"cjcq91w0y000zzc8f9ln3civo"},{"post_id":"cjcq91w0l0005zc8fesau3g64","tag_id":"cjcq91w0v000qzc8fj9r2ky75","_id":"cjcq91w0y0010zc8fe516e8wa"},{"post_id":"cjcq91w0m0006zc8fz7sp0tjq","tag_id":"cjcq91w0x000yzc8ffn2tbqvg","_id":"cjcq91w0z0013zc8fwb0w2sh8"},{"post_id":"cjcq91w0m0006zc8fz7sp0tjq","tag_id":"cjcq91w0y0011zc8fg6l190ht","_id":"cjcq91w0z0014zc8fu81qdmj6"},{"post_id":"cjcq91w0o0009zc8frix7bzwk","tag_id":"cjcq91w0j0003zc8ffazvbbsr","_id":"cjcq91w0z0016zc8f8poij9p4"},{"post_id":"cjcq91w0o0009zc8frix7bzwk","tag_id":"cjcq91w0u000nzc8f56cuipaz","_id":"cjcq91w100017zc8fwz1vx5h2"},{"post_id":"cjcq91w0q000azc8fm9aojo90","tag_id":"cjcq91w0z0015zc8fg9503153","_id":"cjcq91w100018zc8fb252bl7g"}],"Tag":[{"name":"android","_id":"cjcq91w0j0003zc8ffazvbbsr"},{"name":"cm","_id":"cjcq91w0n0008zc8fim1cmyvf"},{"name":"lineageos","_id":"cjcq91w0r000dzc8f8o7z0y1h"},{"name":"面试","_id":"cjcq91w0u000nzc8f56cuipaz"},{"name":"contacts","_id":"cjcq91w0v000qzc8fj9r2ky75"},{"name":"hexo","_id":"cjcq91w0x000yzc8ffn2tbqvg"},{"name":"blog","_id":"cjcq91w0y0011zc8fg6l190ht"},{"name":"english","_id":"cjcq91w0z0015zc8fg9503153"}]}}